<html>
<head>
<title>qlib</title>
<style>

body {
	font-family:Arial, Verdana, Geneva, Helvetica, sans-serif;	
}

img:hover {
cursor: pointer;
}	

.modal-png {
display: none; /* Hidden by default */
position: fixed; /* Stay in place */
z-index: 9; /* Sit on top */
padding-top: 100px; /* Location of the box */
left: 0;
top: 0;
width: 100%; /* Full width */
height: 100%; /* Full height */
overflow: auto; /* Enable scroll if needed */
background-color: rgb(0,0,0); /* Fallback color */
background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content-png {
background-color: #fefefe;
margin: auto;
padding: 20px;
border: 1px solid #888;
width: 100%;
height: 100%;
}

/* The Close Button */
.closePng {
color: #aaaaaa;
float: right;
font-size: 28px;
font-weight: bold;
}

.closePng:hover,
.closePng:focus {
color: #000;
text-decoration: none;
cursor: pointer;
}

</style>
<style>
.modal-package {
display: none; /* Hidden by default */
position: fixed; /* Stay in place */
z-index: 10; /* Sit on top */
padding-top: 100px; /* Location of the box */
padding-bottom: 100px; /* Location of the box */
left: 0;
top: 0;
width: 100%; /* Full width */
height: 100%; /* Full height */
overflow: auto; /* Enable scroll if needed */
background-color: rgb(0,0,0); /* Fallback color */Group
background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content-package {
background-color: #fefefe;
margin: auto;
padding: 20px;
border: 1px solid #888;
width: 70%;
height: 100%;
overflow: auto; /* Enable scroll if needed */
}

/* The Close Button */
.close-package {
color: #aaaaaa;
float: right;
font-size: 28px;
font-weight: bold;
}

.close-package:hover,
.close-package:focus {
color: #000;
text-decoration: none;
cursor: pointer;
}

.modal {
display: none; /* Hidden by default */
position: fixed; /* Stay in place */
z-index: 1; /* Sit on top */
padding-top: 100px; /* Location of the box */
padding-bottom: 100px; /* Location of the box */
left: 0;
top: 0;
width: 100%; /* Full width */
height: 80%; /* Full height */
overflow: auto; /* Enable scroll if needed */
background-color: rgb(0,0,0); /* Fallback color */
background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Content */
.modal-content {
background-color: #fefefe;
margin: auto;
padding-top: 20px;
padding-bottom: 20px;
border: 1px solid #888;
width: 100%;
height: 100%;
}

/* The Close Button */
.close {
color: #aaaaaa;
float: right;
font-size: 28px;
font-weight: bold;
}

.close:hover,
.close:focus {
color: #000;
text-decoration: none;
cursor: pointer;
}
</style>

<link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />

<link rel="stylesheet" type="text/css" href="jquery-1.8.2/css/cupertino/jquery-ui-1.8.2.custom.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/dataTables-1.6/media/css/demo_table.css" />


<link rel="stylesheet" type="text/css" href="jquery-1.8.2/jquery-treeview/jquery.treeview.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/contextmenu/jquery.contextmenu.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/fixedHeaderTable/defaultTheme1.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/autoSuggest/autoSuggest.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/flexigrid/css/flexigrid.pack.css" />
<link rel="stylesheet" type="text/css" href="jquery-1.8.2/qtip/jquery.qtip.min.css" />

<link rel="stylesheet" type="text/css" href="css/colors.css" />
<link rel="stylesheet" type="text/css" href="css/wiki_main.css" />
<link rel="stylesheet" type="text/css" href="css/comment_dialog.css" />
<link rel="stylesheet" type="text/css" href="css/revision_list.css" />
<link rel="stylesheet" type="text/css" href="css/ace_r.css">
<link rel="stylesheet" type="text/css" href="css/r.css" />
<link rel="stylesheet" type="text/css" href="css/teamorg.css" />
<link rel="stylesheet" type="text/css" href="css/jq_ui.css">
<link rel="stylesheet" type="text/css" href="css/search_r.css" />

<link rel="stylesheet" type="text/css" href="fileupload/fileuploader.css" />

<link rel="stylesheet" type="text/css" href="js/jquery/multiselect.css" />

<link rel="stylesheet" type="text/css" href="css/main.css" />
<link rel="stylesheet" type="text/css" href="css/display_view.css" />



<script language="JavaScript" type='text/javascript' src='dwr/engine.js'></script>
<script language="JavaScript" type='text/javascript' src='dwr/util.js'></script>
<script language="JavaScript" type='text/javascript' src='dwr/interface/RFunctionMgmt.js'></script>


<script language="JavaScript" type="text/javascript" src="js/prototype.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/js/jquery-1.4.2.min.js"></script>
<script>
     var $j = jQuery.noConflict();	 
</script>

<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/js/jquery-ui-1.8.2.custom.min.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/dataTables-1.6/media/js/jquery.dataTables.min.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/expander/jquery.expander.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/contextmenu/jquery.contextmenu.js"></script>

<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/jquery-treeview/jquery.treeview.min.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/jquery-treeview/jquery.cookie.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/fixedHeaderTable/jquery.fixedheadertable.min.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/scrollTo/jquery.scrollTo-1.4.2-min.js"></script>

<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/autoSuggest/jquery.autoSuggest.minified.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/flexigrid/js/flexigrid.pack.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/inlineEdit/jquery.inlineedit.js"></script>
<script language="JavaScript" type="text/javascript" src="jquery-1.8.2/qtip/jquery.qtip.min.js"></script>
<script language="JavaScript" type="text/javascript" src="fileupload/fileuploader.js"></script>


<script language="JavaScript" type="text/javascript" src="moment/moment.min.js"></script>

<script language="javascript" type="text/javascript" src="editarea_0_8_2/edit_area_full.js"></script>
<script src="ace/src/ace.js" data-ace-base="ace" charset="utf-8"></script>
<script src="ace/src/mode-r.js" type="text/javascript" charset="utf-8"></script>
<script src="ace/src/theme-dreamweaver.js" type="text/javascript" charset="utf-8"></script>
<script language="JavaScript" src="js/jquery/multiselect.js"></script>

<script language="JavaScript" type="text/javascript" src="js/jquery/commondialog.js"></script>


<!-- Start r.js -->
<script>

var treeSelector="div#rf_treeMenu";
var treeMenuRendered=false;
var jqtree=null;
var rf_groupColor=new Array();
var scd_groupIcons=new Array();
var full_version=false;
var editor_initiated=false;
var prevCtxClk=null;
var rf_TagColors=new Object();
var rf_functions=new Array();
var areaEditOptions=new Object();
var scd_TagColors={};

 
var CODE_EDITOR_DEFAULT="default";
var CODE_ACE_EDITOR="ace";
var CODE_MIRROR_EDITOR="codemirror";

var CODE_EDITOR= CODE_ACE_EDITOR;
var ACE_EDITORS=new Object();
var REDITOR_ADMIN=true;


var FUNCTION_TYPE_NORMAL=0;
var FUNCTION_TYPE_CLASS=1;
var FUNCTION_TYPE_METHOD=2;

var dClick=0;

var isPersonalAscSort = false;
var isPersonalDescSort = false;

function setCookie(name,value,days) {
    var expires = "";
    if (days) {
        var date = new Date();
        date.setTime(date.getTime() + (days*24*60*60*1000));
        expires = "; expires=" + date.toUTCString();
    }
    document.cookie = name + "=" + (value || "")  + expires + "; path=/";
}
function getCookie(name) {
    var nameEQ = name + "=";
    var ca = document.cookie.split(';');
    for(var i=0;i < ca.length;i++) {
        var c = ca[i];
        while (c.charAt(0)==' ') c = c.substring(1,c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
    }
    return null;
}
function eraseCookie(name) {   
    document.cookie = name+'=; Max-Age=-99999999;';  
}

function personalSort() {
	if (getCookie('personalSort')=="0" || getCookie('personalSort')== null || getCookie('personalSort')== "") {
		setCookie('personalSort','1',1); 
	} else if (getCookie('personalSort')=="1") {
		setCookie('personalSort','2',1);
	} else {
		setCookie('personalSort','0',1);
	}
	window.location.reload();
}

function infoSVNMessage() {
        //alert("Revisions will only be traced if commit changes in Qlib");
}

function fr_pageinit(open_functions,readonly,ignoretreeint) {
	
	var respBack=function(data){
 
		progress_message(null);
		if(data!=null){
			if(data.tags!=null){				
				for (ic = 0; ic < data.tags.length; ic++) {
					rf_TagColors[data.tags[ic].tagname]=data.tags[ic].background_color;		
					scd_TagColors[data.tags[ic].tagname]=data.tags[ic].background_color;
				}	
			}
			rf_groupColor=data.group_colors;
			fr_treeListGen(data);
			if(data.lite!=null && data.lite){
				$j(".fe-mainMenu").hide();
				$j(".rf_toolBar").hide();
			}
			if(data.open_functions!=null){			
				rf_toggleTree();
				rf_open(data.open_functions);
			}			
		}
		if($j("body").attr("ext_ver")!=null){
			console.log("4E Chrome Extension Version:"+$j("body").attr("ext_ver"));
		}else{
			//console.log("4E Chrome Extension not found");
			if($j.cookie("extn_alerted")==null){
				//message_status("<div style='background-color:#9EC0BD;border-radius:4px 0px 0px 4px; padding:10px;margin: -7px 3px -7px -7px;'><h4 style='margin:0px 0px 10px 0px'>4ECAP Chrome extesion available!</h4> <div><pre>\\\\10.153.66.10\\Public\\Infrastructure\\4E Chrome Extension\\4e_chrome.crx</pre>Go to Chrome Extension page (Tools->Extension), drag above file and drop anywhere in that page.</div></div>");
				$j.cookie("extn_alerted","yes",{expires:moment().add('days', 1).toDate()});
			}
		}
	}
	
	progress_message("please wait...");
	if(typeof readonly=='undefined'){
		var readonly=true;
	}	
	if(ignoretreeint==null){
		ignoretreeint=false;
	}
	
	try{
		window.postMessage({question:"version",url:document.location.href},document.location.href);
	}catch(ex){
		console.log(ex);
	}
	RFunctionMgmt.getFolderPanelData(open_functions,readonly,ignoretreeint,respBack);
	setInterval(function(){RFunctionMgmt.editorActiveDetected(function(){})},90000);
}

function rf_toggleTree(){
			$j(".folder_view").toggleClass( "hide", 50);
			return false;	
}

function createPrivateNewSubFolder(folderparent) {
	var foldername=prompt("Private Sub Folder name:").replace(/ /g,"_");
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createPrivateSubFolder(ALUSER_COOKIE, foldername, folderparent,function(result){
			if (!result.includes("Duplicate")) {
				window.location.reload();
			}
			message_status(result);
		});
	}
}

function createNewSubFolder(folderparentId,folderparentName,group_uid) {
	var foldername=prompt("Private Sub Folder name:").replace(/ /g,"_");
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createSubFolder(ALUSER_COOKIE,foldername, folderparentId, folderparentName, group_uid, function(result){
			//if (!result.includes("Duplicate")) {
				window.location.reload();
			//}
			//message_status(result);
		});
	}
}

function createNewFolder(o) {
	var foldername=prompt("Private folder name:").replace(/ /g,"_");
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createPrivateFolder(ALUSER_COOKIE, foldername,function(result){
			if (!result.includes("Duplicate")) {
				window.location.reload();
			}
			message_status(result);
		});
	}
}

function createTeamNewSubFolder(folderparent,teamname) {
	var foldername=prompt("Team Sub Folder name:").replace(/ /g,"_");
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createTeamSubFolder(ALUSER_COOKIE, foldername, folderparent, teamname, function(result){
			if (!result.includes("Duplicate")) {
				window.location.reload();
			}
			message_status(result);
		});
	}
}

function createNewFolderTeam(o, teamName) {
	var foldername=prompt("Team folder name:").replace(/ /g,"_");
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createTeamFolder(ALUSER_COOKIE, foldername, teamName, function(result){
			if (!result.includes("Duplicate")) {
				window.location.reload();
			}
			message_status(result);
		});
	}
}

function sortTeam(id) {

	var checkVal = $j("#sortTeam_"+id).val();
    $j("#sortTeam_"+id).val(checkVal=="Sort ASC" ? "Sort DESC" : "Sort ASC");

	//get Folders
    var getFolders = [];
    var folders =  $j("#ul_groupname_team_"+id).children();
    folders.each(function() {
            var folder = $j(this).find(".team_folder").text();
            getFolders.push(folder);
    });

    //get Functions
    var getFunc ={};

    for(a=0; a < getFolders.length; a++) {
            var child = $j("#ul_groupname_team_"+id+"_"+getFolders[a]).children();
            var tempf = [];
            child.each(function () {
                    var childl2 = $j(this).find(".fname");
                    tempf.push(childl2.text());
            });

            tempf.reverse();
            for(b=0; b < tempf.length; b++) {
                    getFunc[tempf[b]] = getFolders[a];
            }
    }
    
    folders.each(function() {
            var folder = $j(this).find(".team_folder").text();
            var findFol = $j("#ul_groupname_team_"+id+"_"+folder).children();
            findFol.each(function() {
                    $j(this).remove();
            });
    });
       
    // Functions
    
    var counter = (Math.floor((Math.random() * 100000000) + 1))*-1;

	for (var i in getFunc) {

		var nodehtml2="<div  class='treeFunctionItem' folderid='4' id='function_id_"+counter+"' >";
		 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+ i +"'>"+ i +"</span>";
		 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>team</span></div>";
		 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";
		 nodehtml2+=REDITOR_ADMIN?"<span style='margin-right:10px;'><img src='images/reorder.png' class='orderholder' style='cursor:s-resize;margin-right:px'></span>" :"";
		 
		 nodehtml2+="<input type='button' class='fn_itembtn open' flag='open' function_id='"+counter+"' function_name='"+ id + "_" + i +".r' value='View' onclick='fn_edit_team(this,&#39;"+ id+"/Library/"+getFunc[i] +"&#39;)'>";
		 
		 nodehtml2+="<input type='button' class='fn_itembtn edit' flag='edit' function_id='"+counter+"' function_name='"+ id + "_" + i +".r' value='Edit' onclick='fn_edit_team(this,&#39;"+ id+"/Library/"+getFunc[i] +"&#39;)'>";

		 nodehtml2+="<input type='button' class='fn_itembtn delete' flag='delete'  function_id='"+counter+"' function_name='"+ id + "_" + i +".r' value='Del' onclick='fn_deleteFunctionTeam(this,&#39;"+ id+"/Library/"+getFunc[i] +"&#39;)'>";
		 nodehtml2+="</div></div>";
	    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
		$j('#ul_groupname_team_'+id+'_'+getFunc[i]).append(item2);

		counter-=1;
	}

}

function fr_treeListGen(data1){
	if (data1 != null && typeof data1 == 'object') {
		
		var username = ALUSER_COOKIE;
		if (username == "") {
			username = "User Function";
		}

		RFunctionMgmt.headerBasedOnTOM(data1.groups, function(datax) {
		RFunctionMgmt.getPrivateFolder(username.toLowerCase(), function(data) {
			RFunctionMgmt.getPrivateFunction(username.toLowerCase(), function(data2) {
				RFunctionMgmt.isTOMUser(function(data3) { 
					RFunctionMgmt.getTeamByUsername(function(data4) { 
						RFunctionMgmt.getTeamFolder(data4,function(data5) {
							RFunctionMgmt.getTeamFunction(data4,function(data6) {
								RFunctionMgmt.getTrashPrivateFunction(username.toLowerCase(), function(data7) {
									RFunctionMgmt.getTrashTeamFunction(data4, function(data8) {
					
			// ALphien Group Bar
			
			var tempGroup=new Array();
			var ulGroup=new Array();
			if (data1.groups != null) {
				$j(treeSelector).html("");  //removes if there any loading message.
				$j(treeSelector).append("<ul class='filetree'></ul>");
				var groupnodes="";	
				
				for (iab=0;iab<data1.groups.length;iab++) {
					groupname=data1.groups[iab].value;

					if(datax.indexOf(groupname) > -1) {
						uik=data1.groups[iab].key;
						uik = uik.replace(/\./g, "_"); //added by gama regarding iTask 703-AL
						var htmlid = "root_task_" + uik;
						var nodehtm = "<div class='FunctionGroupBar' groupTarget='" + uik + "' id='" + htmlid + "' style='background-color=#F7F7F7;'><div style='display:inline'>";
						nodehtm += "</div><div style='display:inline;vertical-align:top;' class='label_groupname'><b>" + groupname + "</b></div>";
						nodehtm += "<div style=' display:inline;float:right'>";
						
						
						if (data3 == true) {
							nodehtm += "<input type='button'  class='FunctionGroupBarBtn'  group_uid='" + uik + "' taskname='" + groupname + "' value='New Folder' onclick='rf_ctxCreateFolder(\""+uik+"\")'>";
							nodehtm += REDITOR_ADMIN ? "<span style='margin-left:20px;'><img src='images/draghandle.png' class='dragholder' style='cursor:move'></span>" : "";
						}
						
						nodehtm += "</div></div>";
						var spn = "<span class='folder'>" + groupname + "</span>"; 
						var ulgrpid="ul_groupname_"+uik;
						groupnodes += "<li id='closed_"+uik+"' class='closed' groupname='" + uik + "'>" + nodehtm + "<ul id='"+ulgrpid+"' groupname='" + uik + "'></ul></li>";
						tempGroup[iab] = "closed_"+uik;
						ulGroup[iab] = ulgrpid;	
					}
					
				}
				groupnodes += "";
				$j(treeSelector + " ul.filetree").append(groupnodes);
			}
			
			// Team Group Bar

			if (data4 != null) {
				for (var i=0; i<data4.length; i++ ) {
						var nodehtm_team = "<div id='TeamGroupBar_"+data4[i]+"' class='FunctionGroupBar' groupTarget='private' id='root_task_private' >" +
							"<div style='display:inline'>" +
							"</div>" +
							"<div style='display:inline;vertical-align:top;' class='label_groupname'>" +
								"<b>"+data4[i]+"</b>" +
							"</div>" +
							"<div style=' display:inline;float:right'>" +
							
							 "<input type='button' id='sortTeam_" +data4[i] + "' class='FunctionGroupBarBtn' value='Sort ASC' onclick='sortTeam(\""+data4[i]+"\");'>" +
							
							"<input type='button' class='FunctionGroupBarBtn' group_uid='team' taskname='Team' value='New Folder' onclick='createNewFolderTeam(event, \""+data4[i]+"\")'>";
			nodehtm_team+= REDITOR_ADMIN ? "<span style='margin-left:20px;'><img src='images/draghandle.png' class='dragholder' style='cursor:move'></span>" : "";
			nodehtm_team+= "</div></div>";
			
			var groupnodes_team = "<li id='closed_team' class='closed' groupname='team'>" + 
								nodehtm_team + 
								"<ul id='ul_groupname_team_"+data4[i]+"' groupname='team'>" +
								"</ul>" +
						 "</li>";
						 $j(treeSelector + " ul.filetree").append(groupnodes_team);
				}
				
			}
			
			//  Personal Group Bar
			
			var username = ALUSER_COOKIE;
			
			if (username == "") {
				username = "User Function";
			}			
			nodehtm = "<div class='FunctionGroupBar' groupTarget='private' id='root_task_private' >" +
							"<div style='display:inline'>" +
							"</div>" +
							"<div style='display:inline;vertical-align:top;' class='label_groupname'>" +
								"<b>"+username+"</b>" +
							"</div>" +
							"<div style=' display:inline;float:right'>" +
							"<input type='button' class='FunctionGroupBarBtn' group_uid='private' taskname='Private' value='New Folder' onclick='createNewFolder(event)'>";
			nodehtm+= REDITOR_ADMIN ? "<span style='margin-left:20px;'><img src='images/draghandle.png' class='dragholder' style='cursor:move'></span>" : "";
			nodehtm+= "</div></div>";
			
			groupnodes = "<li id='closed_private' class='closed' groupname='private'>" + 
								nodehtm + 
								"<ul id='ul_groupname_private' groupname='private'>" +
								"</ul>" +
						 "</li>";
			
			$j(treeSelector + " ul.filetree").append(groupnodes);


			//  Trash for team & personal
					
			nodehtm = "<div class='RecycleGroupBar' groupTarget='recycle' id='root_task_recycle' >" +
							"<div style='display:inline'>" +
							"</div>" +
							"<div style='display:inline;vertical-align:top;' class='label_grouprecycle'>" +
								"<b>Trash</b>" +
							"</div>" +
							"<div style=' display:inline;float:right'>";
			nodehtm+= REDITOR_ADMIN ? "<span style='margin-left:20px;'><img src='images/draghandle.png' class='dragholder' style='cursor:move'></span>" : "";
			nodehtm+= "</div></div>";
			
			groupnodes = "<li id='closed_recycle' class='closed' groupname='recycle'>" + 
								nodehtm + 
								"<ul id='ul_groupname_recycle' groupname='recycle'>" +
								"</ul>" +
						 "</li>";
			
			$j(treeSelector + " ul.filetree").append(groupnodes);
				
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			

			// Alphien Folder
			
			var idGen=function(folder,element,prefix){
				prefix=prefix.replace(/\./g,"_"); //added by gama regarding iTask 703-AL 
				folder=folder.replace(/-|\//g, "-");
				folder=folder.replace(/ /g,"_");
 				folder=element+"_"+prefix+"_"+folder;	
				return folder;
			}
			var folderULs=new Array(); 
			var liIdFolder=new Array();
			var ulIdFolder=new Array();
			if (data1.folders != null) {

				for (ibc = 0; ibc < data1.folders.length; ibc++) {					
					
					   var folderclass="";
					   if(data1.folders[ibc].stags!=null && data1.folders[ibc].stags!=''){
					       folderclass="no_folder_axs";
					       data1.folders[ibc].stags.split(",").each(function(el){
					                var tg=$j.trim(el);					                                                    
                                    if(tg.indexOf("thm")>=0){
                                        var tg1=(tg.indexOf("-")>0)?tg.substring(tg.indexOf("-")+1):tg;
                                        if(data1.rwx_tags!=null && $j.inArray(tg1,data1.rwx_tags)>=0 ){
                                            folderclass="";
                                        }
                                    }  
					       });
					   }
						var group_uid=data1.folders[ibc].group_uid;
						
						group_uid = group_uid.replace(/\./g,"_"); //added by gama regarding iTask 703-AL
												
						var folderpath=data1.folders[ibc].folder_name;
						var uniqfolder=data1.folders[ibc].taskuid+"_"+folderpath;
						
						///////////////////
						
						//gamahore
						
						/*data1.child_parent
						
						for (var i in data1.child_parent) {
						// i = folder
						// data1.child_parent[i] = parent folder
							console.log("==========="+i+"--"+data1.child_parent[i]);
						}*/
						
						if (data1.folders[ibc].parent_folder!=null) {
							console.log("==========="+folderpath+"--"+data1.folders[ibc].parent_folder);
						}
						
						
						//////////////////
												
						if (folderpath.indexOf("/")>=0  ) {
																					
							var fsplit = folderpath.split("/");
							var current=fsplit[fsplit.length-1];
							var parent= folderpath.replace("/"+current,"");
	 						if ($j('span[uniquefid="' + uniqfolder + '"]').length == 0) {
							    var ulid=idGen(folderpath,'ul',group_uid);
								var liid=idGen(folderpath,'li',group_uid);
								var folder = '<li id="'+liid+'" style="display:block" class="closed '+folderclass+'" folderitem="yes" foldername="' + folderpath + '" group_uid="' + group_uid + '"><span uniquefid="' + uniqfolder + '" class="folder">' + current + '</span><ul id="'+ulid+'" foldername="' + data1.folders[ibc].folder_name + '"  folderid="' + data1.folders[ibc].id + '"></ul></li>';
								
								folderULs[data1.folders[ibc].id]=ulid;
								var pulid=idGen(parent,'ul',group_uid);
								$j('#'+pulid).append(folder);
							}
							
						}else {
							if ($j('span[uniquefid="' + uniqfolder + '"]').length == 0) {	
							 	var ulid=idGen(folderpath,'ul',group_uid);
								var liid=idGen(folderpath,'li',group_uid);
								
								var foldbuld="";
								var folder='<li id="'+liid+'" style="display:block" folderitem="yes" class="closed '+folderclass+'" foldername="' + folderpath + '" group_uid="' + group_uid + '"><span class="folder" style="display:inline" uniquefid="'+uniqfolder+'" >'+data1.folders[ibc].folder_name+'</span>';
								folder+=foldbuld;
								
								/*if (data3 == true) {
									folder+=REDITOR_ADMIN ? '<span><img src="images/reorder.png" class="orderholder" style="cursor:s-resize;"></span>' : '';
								}*/
								
								folder+='<ul id="'+ulid+'" foldername="'+data1.folders[ibc].folder_name+'" folderid="'+data1.folders[ibc].id+'"></ul></li>';
								folderULs[data1.folders[ibc].id]=ulid;
								
								var ulgrpid="";
								
								if (data1.folders[ibc].parent_folder!=null) {
									$j('#'+idGen(data1.folders[ibc].parent_folder,'ul',group_uid)).append(folder);
								} else {
									ulgrpid="ul_groupname_"+group_uid;
									$j('#'+ulgrpid).append(folder);
								
								}
																									
								//var ulgrpid="ul_groupname_"+group_uid;
								//$j('#'+ulgrpid).append(folder);
								
								
							}
 							
						}
						liIdFolder[ibc]=liid;
						ulIdFolder[ibc]=ulid;
					}
			 }
			
			var menu2 = [
			     		  /*{'New Sub Folder':{onclick:function(menuItem,menu) {
			                var tobj=this;
			                var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid');
			                var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
			                var group_uid=$j(this).parent().attr('group_uid');
			                setTimeout(function(){createNewSubFolder(folderid,foldername,group_uid)},100);
			     
			                },
			                icon:'images/folder_trans.png'} 
			              },*/
						  {'New Function':{onclick:function(menuItem,menu) {	
						  		infoSVNMessage();				 
							 	var tobj=this;
						  	 	var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid');				  	 	
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
								setTimeout(function(){createRFunction(folderid,FUNCTION_TYPE_NORMAL,foldername);},100);						
		 
						  	},
						  	icon:'images/menu_newfunc.png'} 
						  },				 	
						  {'New S4 Class':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();					 
							 	var tobj=this;
						  	 	var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid');
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');				  	 	 
								setTimeout(function(){createRFunction(folderid,FUNCTION_TYPE_CLASS,foldername);},100);						

						  	},
						  	icon:'images/class_icon.png'} 
						  },
						  {'New S4 Method':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();                    
		                        var tobj=this;
		                        var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid');
		                        var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
		                        setTimeout(function(){createRFunction(folderid,FUNCTION_TYPE_METHOD,foldername);},100);                     

		                    },
		                    icon:'images/method_icon.png'} 
		                  },
						  $j.contextMenu.separator,				   
						  {'Rename':{onclick:function(menuItem,menu) {
							 if (confirm("Renaming will reload this page and unsaved data on this page will lost, Are you still want to do rename now?")) {
							 	var tobj=this;
						  	 	var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid'); 
								var cfolder=$j(this).text();						
								setTimeout(function(){
										var newname=prompt("Folder Name:",cfolder);
										if(newname==cfolder){alert("Not renamed")}
										else if(newname!=null && newname!='' && newname!=cfolder){
											RFunctionMgmt.renameFolder(parseInt(folderid),$j.trim(newname), cfolder,function(data){
												location.reload(true);
											});
										}
								},100);
							 }
						  	},
						  	icon:'images/menu_renamefunc.png'} 
						  },
						   $j.contextMenu.separator,				   
						  {'Delete Folder':{onclick:function(menuItem,menu) {
							 	var tobj=this;
						  	 	if($j(this).parent().find(" ul li[taskitem='yes']").length>0){
						  	 		message_status("This folder contain functions, Please move them before deleting")
						  	 	}else{
					  	 		    var folderid=$j(this).parent().children(" ul[folderid]").attr('folderid'); 
									var cfolder=$j(this).text();
						  	 		setTimeout(function(){				  	 			
						  	 			var respBack=function(data){
						  	 			     message_status("Folder has been deleted");
						  	 			     $j(tobj).parent().fadeOut(300, function(){ $j(tobj).parent().remove();});				  	 			     	
						  	 			}
						  	 			RFunctionMgmt.deleteFolder(cfolder,parseInt(folderid),respBack);
						  	 		},100);
						  	 	} 
						  	},
						  	icon:'images/menu_delete.png'} 
						  }

						]; 
						
						$j(treeSelector +" div.treeFunctionItem  [title],"+treeSelector +" [folderitem] [title]").qtip();
						
						var mOptions={
							theme:'vista',
							showSpeed:100, hideSpeed:100, showTransition:'fadeIn', hideTransition:'fadeOut', 
							beforeShow: function() {
								return true; 
							}, 
							showCallback:function(){						 
								if(prevCtxClk){
									$j(prevCtxClk).removeClass("treefldrHld");
								}
								$j(this.target).addClass("treefldrHld");
								prevCtxClk=this.target;
							},
							hideCallback:function(){
								$j(this.target).removeClass("treefldrHld");
							}
						}
						if (data3 == true) {
							$j(treeSelector +' li[folderitem="yes"]:not([group_uid="trash"]):not(.no_folder_axs)').children("span.folder").contextMenu(menu2,mOptions);
						}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////			
			// Personal Folder
			
			var pgb = getCookie("personalSort");
			if(pgb=="1") {
				data.sort(); //sort folder by name
			} else if(pgb=="2") {
				data.reverse();
			}
			
                        var addDirToTree = "";
                        var stickto = "";
                        for(d=0;d<data.length;d++){
                                /*addDirToTree = '<li id="li_private_'+data[d]+'" style="display:block" folderitem="yes private" class="closed" foldername="'  + data[d]+ '" group_uid="private">' +
                                //'<div class="hitarea closed-hitarea -hitarea collapsable-hitarea"></div>' +
                                                        '<span class="folder private_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + data[d] + '</span>';
                                                        //addDirToTree+=REDITOR_ADMIN ? '<span><img src="images/reorder.png" class="orderholder" style="cursor:s-resize;"></span>' : '';
                                                        addDirToTree+='<ul id="ul_private_'+data[d]+'" foldername='+data[d]+' folderid="private_'+data[d]+'"></ul>' +'</li>';
                                $j('#ul_groupname_private').append(addDirToTree);*/

                                if (data[d].includes("/")) {
                                        var sf = data[d].split("/");
                                        var tt = "";
                                        for(e=0;e<sf.length-1;e++) {
                                                tt = tt + "_" + sf[e];
                                        }
                                        stickto = '#ul_private' + tt;
                                        var holddata = data[d];
                                        var mdata = holddata.replace(/\//g,"_");
                                        addDirToTree = '<li id="li_private_'+mdata+'" style="display:block" folderitem="yes private" class="closed" foldername="'  + mdata + '" group_uid="private">' +
                                                        '<span class="folder private_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + sf[sf.length-1] + '</span>';
                                                        addDirToTree+='<ul id="ul_private_'+mdata+'" foldername='+mdata+' folderid="private_'+mdata+'"></ul>' +'</li>';
                                } else {
                                        stickto = '#ul_groupname_private';
                                        addDirToTree = '<li id="li_private_'+data[d]+'" style="display:block" folderitem="yes private" class="closed" foldername="'  + data[d]+ '" group_uid="private">' +
                                                        '<span class="folder private_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + data[d] + '</span>';
                                                        addDirToTree+='<ul id="ul_private_'+data[d]+'" foldername='+data[d]+' folderid="private_'+data[d]+'"></ul>' +'</li>';
                                }

                                $j(stickto).append(addDirToTree);
                        }

			var menu_right_click_private = [


						  /*{'New Sub Folder':{onclick:function(menuItem,menu) {
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');							  	 	
								setTimeout(function(){createPrivateNewSubFolder(foldername)},100);
		 
						  	},
						  	icon:'images/folder_trans.png'} 
						  },*/
						  {'New Function':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();					 
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');	
								setTimeout(function(){createRFunctionPrivate(foldername,FUNCTION_TYPE_NORMAL,);},100);						
		 
						  	},
						  	icon:'images/menu_newfunc.png'} 
						  },				 	
						  {'New S4 Class':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();					 
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');				  	 	 
								setTimeout(function(){createRFunctionPrivate(foldername,FUNCTION_TYPE_CLASS);},100);						

						  	},
						  	icon:'images/class_icon.png'} 
						  },
						  {'New S4 Method':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();                    
		                        var tobj=this;
		                        var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
		                        
		                        setTimeout(function(){createRFunctionPrivate(foldername,FUNCTION_TYPE_METHOD);},100);                     

		                    },
		                    icon:'images/method_icon.png'} 
		                  },
						  $j.contextMenu.separator,				   
						  {'Rename':{onclick:function(menuItem,menu) {
							 if (confirm("Renaming will reload this page and unsaved data on this page will lost, Are you still want to do rename now?")) {
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername'); 
								var cfolder=$j(this).text();						
								setTimeout(function(){
										var newname=prompt("Folder Name:",cfolder);
										if(newname==cfolder){alert("Not renamed")}
										else if(newname!=null && newname!='' && newname!=cfolder){
											RFunctionMgmt.renamePrivateFolder(foldername,newname.replace(/ /g,"_"),ALUSER_COOKIE,function(data){
												if (data==1) {
													location.reload(true);
												} else if (data==-1){
													message_status("Functions Folder can not be renamed !");
												} else if (data==-2) {
													message_status("Folder is not exist. Please check your home directory");
												} else if (data==0) {
													message_status("Error while renaming folder.");
												}
											});
										}
								},100);
							 }
						  	},
						  	icon:'images/menu_renamefunc.png'} 
						  },
						   $j.contextMenu.separator,				   
						  {'Delete Folder':{onclick:function(menuItem,menu) {
							 	var tobj=this;
						  	 	if($j(this).parent().find(" ul li[taskitem='yes']").length>0){
						  	 		message_status("This folder contain functions, Please move them before deleting");
						  	 	}else{
					  	 		    var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername'); 
						  	 		setTimeout(function(){				  	 			
						  	 			var respBack=function(data){
						  	 				if (data==1) {
						  	 					message_status("Your directory has been deleted");
						  	 					$j(tobj).parent().fadeOut(300, function(){ $j(tobj).parent().remove();});
						  	 				} else if (data==-1) {
						  	 					message_status("Master directory can not be deleted");
						  	 				} else {
						  	 					message_status("Can not delete directory. Please check directory permission");
						  	 				}
						  	 			}
						  	 			RFunctionMgmt.deleteFolderPrivate(foldername,ALUSER_COOKIE,respBack);
						  	 		},100);
						  	 	} 
						  	},
						  	icon:'images/menu_delete.png'} 
						  }

						]; 
						
						$j(treeSelector +" div.treeFunctionItem  [title],"+treeSelector +" [folderitem] [title]").qtip();
						
						var mOptions_private ={
							theme:'vista',
							showSpeed:100, hideSpeed:100, showTransition:'fadeIn', hideTransition:'fadeOut', 
							beforeShow: function() {
								return true; 
							}, 
							showCallback:function(){						 
								if(prevCtxClk){
									$j(prevCtxClk).removeClass("treefldrHld");
								}
								$j(this.target).addClass("treefldrHld");
								prevCtxClk=this.target;
							},
							hideCallback:function(){
								$j(this.target).removeClass("treefldrHld");
							}
						}
						$j(treeSelector +' li[folderitem="yes private"]:not([group_uid="trash"]):not(.no_folder_axs)').children("span.private_folder").contextMenu(menu_right_click_private,mOptions_private);
			
			// Team Folder
			if (data4 != null) {
				var addDirToTree = "";
				var stickto = "";
				for (var i in data5) {
					// i = teamName
					// data5[i] = list of folders

					var listFolders = [];
					listFolders = data5[i];
					listFolders.sort();
					
					//for (var j=listFolders.length-1; j >= 0; j-- ) {
					for (var j=0; j < listFolders.length; j++ ) {
						
						listFolders[j] = listFolders[j].replace(i+"/","");
						
						if (listFolders[j].includes("/")) {
							var sf = listFolders[j].split("/");
                            var tt = "";
                            for(e=0;e<sf.length-1;e++) {
                                    tt = tt + "_" + sf[e];
                            }
                            
                            stickto = '#ul_groupname_team' + "_" + i + tt;
                            
                            var holddata = listFolders[j];
                            var mdata = holddata.replace(/\//g,"_");
								
							addDirToTree = '<li id="li_team_'+i +'_'+mdata+'" style="display:block" folderitem="yes team" class="closed" foldername="'  + mdata + '" group_uid="team">' +
								'<span class="folder team_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + sf[sf.length-1] + '</span>';
								addDirToTree+='<ul id="ul_groupname_team_'+ i +'_' + mdata +'" foldername=' + i +'_' + mdata +' folderid="team_' + i +'_' + mdata + '"></ul>' +'</li>';
								
						} else {
							stickto = '#ul_groupname_team_'+i;
							
							addDirToTree = '<li id="li_team_'+ i +'_' + listFolders[j]+'" style="display:block" folderitem="yes team" class="closed" foldername="'  + i +'_' + listFolders[j] + '" group_uid="team">' +
								'<span class="folder team_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + listFolders[j] + '</span>';
								addDirToTree+='<ul id="ul_groupname_team_'+ i +'_' + listFolders[j] +'" foldername=' + i +'_' + listFolders[j] +' folderid="team_' + i +'_' + listFolders[j] + '"></ul>' +'</li>';
								
						}
						
						$j(stickto).append(addDirToTree);
					}
				}

			var menu_right_click_team = [
			     		
						  /*{'New Sub Folder':{onclick:function(menuItem,menu) {
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
						  	 	var teamname = foldername.split("_");						  	 	
								setTimeout(function(){createTeamNewSubFolder(foldername,teamname[0])},100);
		 
						  },
						  	icon:'images/folder_trans.png'} 
						  },*/
						  {'New Function':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();					 
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');	
								setTimeout(function(){createRFunctionTeam(foldername,FUNCTION_TYPE_NORMAL);},100);
		 
						  	},
						  	icon:'images/menu_newfunc.png'} 
						  },				 	
						  {'New S4 Class':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();					 
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');				  	 	 
								setTimeout(function(){createRFunctionTeam(foldername,FUNCTION_TYPE_CLASS);},100);						

						  	},
						  	icon:'images/class_icon.png'} 
						  },
						  {'New S4 Method':{onclick:function(menuItem,menu) {
						  		infoSVNMessage();                    
		                        var tobj=this;
		                        var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername');
		                        setTimeout(function(){createRFunctionTeam(foldername,FUNCTION_TYPE_METHOD);},100);                     

		                    },
		                    icon:'images/method_icon.png'} 
		                  },
						  $j.contextMenu.separator,				   
						  {'Rename':{onclick:function(menuItem,menu) {
							 if (confirm("Renaming will reload this page and unsaved data on this page will lost, Are you still want to do rename now?")) {
							 	var tobj=this;
						  	 	var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername'); 
								var cfolder=$j(this).text();						
								setTimeout(function(){
										var newname=prompt("Folder Name:",cfolder);
										if(newname==cfolder){alert("Not renamed")}
										else if(newname!=null && newname!='' && newname!=cfolder){
											RFunctionMgmt.renameTeamFolder(foldername,newname.replace(/ /g,"_"),ALUSER_COOKIE,function(data){
												if (data==1) {
													location.reload(true);
												} else if (data==-2) {
													message_status("Folder is not exist. Please check your home directory");
												} else if (data==0) {
													message_status("Error while renaming folder.");
												}
											});
										}
								},100);
							 }
						  	},
						  	icon:'images/menu_renamefunc.png'} 
						  },
						   $j.contextMenu.separator,				   
						  {'Delete Folder':{onclick:function(menuItem,menu) {
							 	var tobj=this;
						  	 	if($j(this).parent().find(" ul li[taskitem='yes']").length>0){
						  	 		message_status("This folder contain functions, Please move them before deleting");
						  	 	}else{
					  	 		    var foldername=$j(this).parent().children(" ul[folderid]").attr('foldername'); 
						  	 		setTimeout(function(){				  	 			
						  	 			var respBack=function(data){
						  	 				if (data==1) {
						  	 					message_status("Your directory has been deleted");
						  	 					$j(tobj).parent().fadeOut(300, function(){ $j(tobj).parent().remove();});
						  	 				} else if(data==-2){
						  	 					message_status("You can not delete non-empty folder.");
						  	 				} else {
						  	 					message_status("Error while deleting team folder.");
						  	 				}
											window.location.reload();
						  	 			}
						  	 			
						  	 			RFunctionMgmt.deleteFolderTeam(foldername,respBack);
						  	 		},100);
						  	 	} 
						  	},
						  	icon:'images/menu_delete.png'} 
						  }

						]; 
						
						$j(treeSelector +" div.treeFunctionItem  [title],"+treeSelector +" [folderitem] [title]").qtip();
						
						var mOptions_team ={
							theme:'vista',
							showSpeed:100, hideSpeed:100, showTransition:'fadeIn', hideTransition:'fadeOut', 
							beforeShow: function() {
								return true; 
							}, 
							showCallback:function(){						 
								if(prevCtxClk){
									$j(prevCtxClk).removeClass("treefldrHld");
								}
								$j(this.target).addClass("treefldrHld");
								prevCtxClk=this.target;
							},
							hideCallback:function(){
								$j(this.target).removeClass("treefldrHld");
							}
						}
						$j(treeSelector +' li[folderitem="yes team"]:not([group_uid="trash"]):not(.no_folder_axs)').children("span.team_folder").contextMenu(menu_right_click_team,mOptions_team);
			
			}

			// Trash Folder
			addDirToTree = '<li id="li_recycle_alphien" style="display:block" class="closed" foldername="recycle_alphien" group_uid="recycle_alphien">' +
						'<span class="folder recycle_alphien" style="display:inline" uniquefid="undefined_UserFunctions" >Alphien</span>';
						addDirToTree+='<ul id="ul_recycle_alphien" foldername="recycle_alphien" folderid="recycle_alphien"></ul>' +'</li>';
			$j('#ul_groupname_recycle').append(addDirToTree);
			
			addDirToTree = '<li id="li_recycle_personal" style="display:block" class="closed" foldername="recycle_personal" group_uid="recycle_personal">' +
						'<span class="folder recycle_personal" style="display:inline" uniquefid="undefined_UserFunctions" >Personal</span>';
						addDirToTree+='<ul id="ul_recycle_personal" foldername="recycle_personal" folderid="recycle_personal"></ul>' +'</li>';
			$j('#ul_groupname_recycle').append(addDirToTree);
			
			addDirToTree = '<li id="li_recycle_team" style="display:block" class="closed" foldername="recycle_team" group_uid="recycle_team">' +
						'<span class="folder recycle_team" style="display:inline" uniquefid="undefined_UserFunctions" >Team</span>';
						addDirToTree+='<ul id="ul_recycle_team" foldername="recycle_team" folderid="recycle_team"></ul>' +'</li>';
			$j('#ul_groupname_recycle').append(addDirToTree);


			// Alphien Function
			
			if(data1.rfunctions!=null ){
				for(iac=0;iac<data1.rfunctions.length;iac++){
					    var group_uid=data1.rfunctions[iac].group_id
						rf_functions[rf_functions.length]=data1.rfunctions[iac];
						
						var sc_id=data1.rfunctions[iac].id;						
							var spwidth="352px";
							var folderid=data1.rfunctions[iac].folder_id;
							
							var htmlid="function_id_"+sc_id;

						    var oldclass="treeFunctionItem ";

							var domhtmlid= $j(' #' + htmlid);							
							if (domhtmlid.length > 0) {
								oldclass=domhtmlid.attr("class");
							}
							
							//tag manipulation start ~~~~~~
							var t1="";
							var leng_tag="";
							var more_tags="";
							
							var access_class="access_noaccess";							
							var themefound=false;
							
							if (data1.rfunctions[iac].stags != null && data1.rfunctions[iac].stags != '') {
							    var tags=data1.rfunctions[iac].stags.split(",");
								
								for(iae=0;iae<tags.length;iae++){
									var tg=$j.trim(tags[iae]);
									var owner_tg=data1.rfunctions[iac].owner_tag!=null ? $j.trim(data1.rfunctions[iac].owner_tag):null;

									if(tg.indexOf("thm")>=0) themefound=true;	
									tg1=(tg.indexOf("-")>0)?tg.substring(tg.indexOf("-")+1):tg;
									leng_tag+=tg1;
									if (tg != '') {
									 
										var clas = "function_tag ";
										if(data1.r_tags!=null && $j.inArray(tg1,data1.r_tags)>=0  && access_class=="access_noaccess") access_class="access_readonly";
										if((data1.rwx_tags!=null && $j.inArray(tg1,data1.rwx_tags)>=0) || (data1.rx_tags!=null && $j.inArray(tg1,data1.rx_tags)>=0)) access_class="access_readwrite";
									    if(data1.rwx_tags!=null && $j.inArray(tg1,data1.rwx_tags)>=0 && access_class.indexOf("access_rwx")==-1) access_class+=" access_rwx";
									    if(data1.rx_tags !=null && $j.inArray(tg1,data1.rx_tags)>=0 && access_class.indexOf("access_rx")==-1) access_class+=" access_rx";
									    if(data1.r_tags!=null && $j.inArray(tg1,data1.r_tags)>=0 && access_class.indexOf("access_r")==-1) access_class+=" access_r";
									    if(owner_tg!=null){																				
											owner_tg=(owner_tg.indexOf("-")>0)?owner_tg.substring(owner_tg.indexOf("-")+1):owner_tg;
											if(owner_tg==tg1){
												clas+="item_owner_tag ";
											}
										}
									    
										if (leng_tag.length < 45) {	
												if (rf_TagColors[tg] != null && rf_TagColors[tg] != '') {
													t1 += "<span class='" + clas + "' style='background-color:" + rf_TagColors[tg] + "'>" + tg1 + "</span>";
												} else {
													t1 += "<span class='" + clas + "'>" + tg1 + "</span>";
												}
										}else{
											clas+="task_tag_more ";
											more_tags="<span class='" + clas + "'>...</span>";
										}								
									}									
								}
							}
							if(!themefound)	access_class="access_noaccess";							
							if(data1.superuser!=null && data1.superuser!='') access_class="access_readwrite";							
						
							t1+=more_tags;
					 		var nodehtml="<div  class='"+oldclass+"' folderid='"+folderid+"' id='"+htmlid+"' >";							
							var fn_name=$j.trim(data1.rfunctions[iac].function_name);
							fn_name=(fn_name.length>=55) ? fn_name.substring(0,55)+"...":fn_name;
													
							nodehtml+="<span access='"+access_class+"' class='fname' >"+fn_name+"</span>";	
							
							nodehtml+="<div class='fn_tag_holder' style='margin-left:10px'>"+t1+"</div>";
							
							nodehtml+=data1.sourced_functions!=null && data1.sourced_functions[sc_id]?"<img src='images/sourced.png' style='margin-left:5px' title='Loaded from source, Modifed after package built'>":"";
							if(data1.rfunctions[iac].following!=null && data1.rfunctions[iac].following!=''){
								nodehtml+="<img src='images/following.png' style='margin-left:5px' title='You are following this'>";
							}
							
							// tag manipulate end....							
							var add_class="";
							nodehtml+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='"+data1.rfunctions[iac].deleteddays+"'>";
							
							
							if (data3 == true) {
								nodehtml+=REDITOR_ADMIN?"<span style='margin-right:10px;'><img src='images/reorder.png' class='orderholder' style='cursor:s-resize;margin-right:px'></span>" :"";
							}
							
							nodehtml+=(data1.func_2build!=null && $j.inArray(data1.rfunctions[iac].function_name,data1.func_2build)>=0)?'<span title="This function modified recently and needs to be packaged" style="width:16px;height:16px;background:url(\'images/2package.png\') no-repeat;">&nbsp;&nbsp;&nbsp;&nbsp;</span>' :'';
							if(data1.rfunctions[iac].is_class!=null && data1.rfunctions[iac].is_class==FUNCTION_TYPE_CLASS){
							  add_class+=" function_class ";  
							}
                            
                            if(data1.rfunctions[iac].is_class!=null && data1.rfunctions[iac].is_class==FUNCTION_TYPE_METHOD){
                                add_class+=" function_method ";   
                            }
							nodehtml+="<input type='button' class='fn_itembtn open' flag='open' function_id='"+sc_id+"' function_name='"+data1.rfunctions[iac].function_name+"' value='View' onclick='fn_edit(this)'>";
							nodehtml+="<input type='button' class='fn_itembtn edit' flag='edit'  function_id='"+sc_id+"' function_name='"+data1.rfunctions[iac].function_name+"' value='Edit' onclick='fn_edit(this)'>";
							nodehtml+="<input type='button' class='fn_itembtn delete' flag='delete'  function_id='"+sc_id+"' function_name='"+data1.rfunctions[iac].function_name+"' value='Del' onclick='fn_deleteFunction(this)'>";
							
							if(data1.rfunctions[iac].is_wiki_done!=null && data1.rfunctions[iac].is_wiki_done){
								nodehtml+="<span class='nowiki_warn'><img src='images/white_box.png' border='0'  style='opacity:0.1'/></span>";
							}else{								
								nodehtml+="<span class='nowiki_warn' title='No wiki page for this function' style='background-image: url(images/wiki_warn.png);background-position: 3px 3px; background-repeat: no-repeat;'><img src='images/wiki.png' border='0' style='opacity:0.7'/></span>";
							}
							nodehtml+="</div></div>";
							var item="<li taskitem='yes' class='"+access_class+add_class+"' function_id='"+sc_id+"'>"+nodehtml+"</li>";

							if(access_class.localeCompare("access_noaccess") == 0) {
								item = ""; // gama 29/11/17
							}
							
							var oldfid=domhtmlid.attr("folderid");
							
							if(domhtmlid.length > 0 && oldfid==folderid){
									domhtmlid.parent().replaceWith(item);
							}else{
								domhtmlid.parent().remove();
								if (folderid == null || (folderid != null && folderid == 0)) {
									var ulgrpid="ul_groupname_"+group_uid;
									$j("#"+ulgrpid).append(item);
									
								}else {
										foldeulid=folderULs[folderid];
										if (foldeulid != null) {
											$j('#' + foldeulid).append(item);
										}else{
											//incase of adding new task
											$j(treeSelector + ' ul.filetree ul[folderid="' + folderid + '"]').append(item);
										}
								}
							}
				}
			}
			
			
			// Personal Function
			
			if (data2!=null) {
				var ordered = {};
				
				if (getCookie('personalSort')=="1") {
					Object.keys(data2).sort().forEach(function(key){
                        ordered[key] = data2[key];
                	});
                	data2 = ordered; //sort functions by name
				}
				
				if (getCookie('personalSort')=="2") {
					Object.keys(data2).reverse().forEach(function(key){
                        ordered[key] = data2[key];
                	});
                	data2 = ordered; //sort functions by name
				}
				
				
				/*if (isPersonalAscSort== true) {
					Object.keys(data2).sort().forEach(function(key){
                        ordered[key] = data2[key];
                	});
                	data2 = ordered; //sort functions by name
				}*/
				
				/*if (isPersonalDescSort== true) {
					Object.keys(data2).reverse().forEach(function(key){
                        ordered[key] = data2[key];
                	});
                	data2 = ordered; //sort functions by name
				}*/
				                
                
				var counter = -1;
				
				for(var i in data2) {
					// key = i = filename
					// value = data[i] = directory
					
					var res = i.slice(0,-2); // remove .r

					if (res.includes("_")) {
						var modRes = res.split("_");
						res = modRes[1];
					}

					var mdata = data2[i].replace(/\//g,"_");
					
					var nodehtml2 = "";
					
					var nodehtml2="<div  class='treeFunctionItem' folderid='3' id='function_id_"+counter+"' >";
					 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+res+"'>"+res+"</span>";
					 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>private</span></div>";
					 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";
					 nodehtml2+=REDITOR_ADMIN?"<span style='margin-right:10px;'><img src='images/reorder.png' class='orderholder' style='cursor:s-resize;margin-right:px'></span>" :"";
					 nodehtml2+="<input type='button' class='fn_itembtn open' flag='open' function_id='"+counter+"' function_name='"+i+"' value='View' onclick='fn_edit(this)'>";
					 nodehtml2+="<input type='button' class='fn_itembtn edit' flag='edit' function_id='"+counter+"' function_name='"+i+"' value='Edit' onclick='fn_edit(this)'>";
					 nodehtml2+="<input type='button' class='fn_itembtn delete' flag='delete'  function_id='"+counter+"' function_name='"+i+"' value='Del' onclick='fn_deleteFunctionPrivate(this,\""+data2[i]+"\")'>";
					 nodehtml2+="</div></div>";
				    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
				//$j('#ul_private_'+data2[i]).append(item2);
				$j('#ul_private_'+mdata).append(item2);
					counter-=1;
				}
			}

			// Team Function
			
			if (data4!=null) {

				var counter = -1;

				for (var h in data5) { // h = teamname, data5[i] = list of folders
					for(var i in data6) { // i = team & folder, data[i] = list of scripts
					
						var listFunction = [];
						listFunction = data6[i];
						
						var checkSortTeam = document.getElementById("sortTeam_"+h);
						var tempListFunction = listFunction.sort(); 
						listFunction = (checkSortTeam=="Sort ASC" ? tempListFunction : checkSortTeam=="Sort DESC" ? tempListFunction.reverse() : listFunction );
						
						for (var j=0; j < listFunction.length; j++ ) {
							
							if (i.includes(h)) {

								var res = listFunction[j].slice(0,-2); // remove .r

								if (res.includes("_")) {
									var modRes = res.split("_");
									res = modRes[1];
								}
								
								var nodehtml2 = "";
								
								var chg = i.replace("/","/Library/"); //changefolder

								/*var nodehtml2="<div  class='treeFunctionItem' folderid='4' id='function_id_"+counter+"' >";
								 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+res+"'>"+res+"</span>";
								 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>team</span></div>";
								 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";
								 nodehtml2+=REDITOR_ADMIN?"<span style='margin-right:10px;'><img src='images/reorder.png' class='orderholder' style='cursor:s-resize;margin-right:px'></span>" :"";
								 nodehtml2+="<input type='button' class='fn_itembtn open' flag='open' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='View' onclick='fn_edit_team(this,\'"+ i +"\'")'>";
								 nodehtml2+="<input type='button' class='fn_itembtn edit' flag='edit' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Edit' onclick='fn_edit_team(this,\'"+ i +"\'")'>";
								 nodehtml2+="<input type='button' class='fn_itembtn delete' flag='delete'  function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Del' onclick='fn_deleteFunctionTeam(this,\'"+ i +"\')'>";
								 nodehtml2+="</div></div>";
							    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
								var fpath = i.replace(/\//g, "_");
								$j('#ul_groupname_team_'+fpath).append(item2);*/
								
								var nodehtml2="<div  class='treeFunctionItem' folderid='4' id='function_id_"+counter+"' >";
								 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+res+"'>"+res+"</span>";
								 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>team</span></div>";
								 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";
								 nodehtml2+=REDITOR_ADMIN?"<span style='margin-right:10px;'><img src='images/reorder.png' class='orderholder' style='cursor:s-resize;margin-right:px'></span>" :"";
								 
								 nodehtml2+="<input type='button' class='fn_itembtn open' flag='open' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='View' onclick='fn_edit_team(this,&#39;"+ chg +"&#39;)'>";
								 
								 nodehtml2+="<input type='button' class='fn_itembtn edit' flag='edit' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Edit' onclick='fn_edit_team(this,&#39;"+ chg +"&#39;)'>";
								 nodehtml2+="<input type='button' class='fn_itembtn delete' flag='delete'  function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Del' onclick='fn_deleteFunctionTeam(this,&#39;"+ chg +"&#39;)'>";
								 nodehtml2+="</div></div>";
							    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
								var fpath = chg.replace(/\//g, "_");
								fpath = fpath.replace("_Library_","_"); //changefolder
								$j('#ul_groupname_team_'+fpath).append(item2);

								counter-=1;

							}
						}					
					}
				}
			}
			
			// Trash Alphien Folder & Function
			
			var alName = [];
			var alId = [];
			
			for(var i in data1.rfunctions) {
				// key = i = parentdir
				// value = data[i] = content
				
				//parentDir = i;
				//scriptContent = data.content[i];
				
				//list
				
				
				if (data1.rfunctions[i].deletedon != null) {
				
					alName.push(data1.rfunctions[i].function_name);
					alId.push(data1.rfunctions[i].id);
				
					/*var alName = data1.rfunctions[i].function_name;
					var alId = data1.rfunctions[i].id;
					
					
					
					
					var nodehtml2 = "";

                    var nodehtml2="<div  class='treeFunctionItem' folderid='30' id='function_id_30' >";
                     nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+alName+"'>"+alName+"</span>";
                     nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>Alphien</span><span class='function_tag' style='background-color:#fd572a'>trash</span></div>";
                     nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";

                     nodehtml2+="<input type='button' class='fn_itembtn edit' function_id='"+alId+"' function_name='"+alName+"' value='Put Back' onclick='fn_putback(this,\""+alId+"\")'>";
                     nodehtml2+="<input type='button' class='fn_itembtn delete' function_id='"+alId+"' function_name='"+alName+"' value='Purge' onclick='fn_purge(this,\""+alId+"\")'>";

                     nodehtml2+="</div></div>";
	                var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+alId+"'>"+nodehtml2+"</li>";
	            	$j('#ul_recycle_alphien').append(item2);*/
	            	
				}
			}
			
			var respBack=function(data){
				console.log("============" + data);
			}
			console.log("+++ " + alName[0]);
			RFunctionMgmt.getTree(alName[0],respBack); //gamahore5


			// Trash Personal Folder & Function

			var addDirToTree = "";
			var trashFolder = [];

			for(var e in data7) {
                if(!trashFolder.includes(data7[e])) {

                    trashFolder.push(data7[e]);
                    if (data7[e].includes("/")) {
                       	var sf = data7[e].split("/");
                		for (var x=0; x < sf.length; x++) {

                                var df = "";
                                var ef = "";
                                for (var y=0; y<=x; y++) {
                                        df = df + "_" + sf[y];

                                }
                                addDirToTree = '<li id="li_trash_personal'+df+'" style="display:block" class="closed" foldername="trash_personal'  + df + ' " group_uid="trash_personal">' +
                                                        '<span class="folder trash_personal" style="display:inline" uniquefid="undefined_UserFunctions" >' + sf[x] + '</span>';
                                                        addDirToTree+='<ul id="ul_trash_personal'+df+'" foldername=trash_personal'+df+' folderid="trash_personal'+df+'"></ul>' +'</li>';

                                var ef = "";
                                for (var z=0; z<x; z++) {
                                    ef = ef + "_" + sf[z];
                                }

                                var checkElement = document.getElementById("ul_trash_personal"+df);
                                if (checkElement == null) {
                                    if (x==0) {
                                        $j('#ul_recycle_personal').append(addDirToTree);
                                    }
                                }
                                $j('#ul_trash_personal'+ef).append(addDirToTree);
		                }
                    } else {
                        addDirToTree = '<li id="li_trash_personal_'+data7[e]+'" style="display:block" class="closed" foldername="trash_personal_'  + data7[e]+ ' " group_uid="trash_personal">' +
                                    '<span class="folder trash_personal" style="display:inline" uniquefid="undefined_UserFunctions" >' + data7[e] + '</span>';
                        addDirToTree+='<ul id="ul_trash_personal_'+data7[e]+'" foldername=trash_personal_'+data7[e]+' folderid="trash_personal_'+data7[e]+'"></ul>' +'</li>';
                        $j('#ul_recycle_personal').append(addDirToTree);
                    }
                }
            }

			var counter = -1;
			
            for(var i in data7) {
                    // key = i = filename
                    // value = data7[i] = directory

                    var res = i.slice(0,-8); // remove .r
                    var funcName = res.split("_");

                    var dir = data7[i];

                    if (dir.includes("/")) {
                        dir = dir.replace(/\//g,"_");
                    }

                    var nodehtml2 = "";

                    var nodehtml2="<div  class='treeFunctionItem' folderid='7' id='function_id_"+counter+"' >";
                     nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+funcName[1]+"'>"+funcName[1]+"</span>";
                     nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>private</span><span class='function_tag' style='background-color:#fd572a'>trash</span></div>";
                     nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";

                     nodehtml2+="<input type='button' class='fn_itembtn edit' function_id='"+counter+"' function_name='"+i+"' value='Put Back' onclick='fn_putback_private(this,\""+data7[i]+"\")'>";
                     nodehtml2+="<input type='button' class='fn_itembtn delete' function_id='"+counter+"' function_name='"+i+"' value='Purge' onclick='fn_purge_private(this,\""+data7[i]+"\")'>";

                     nodehtml2+="</div></div>";
                var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
            $j('#ul_trash_personal_'+dir).append(item2);
                    counter-=1;
            }


			// Trash Team Folder & Function
			
			
			if (data1!=null) {
				 //gamahore
			
			}
			

			if (data4!=null) {

				var trashTeam = [];
				// Team Name
				for (var h in data5) { // h = teamname, data5[i] = list of folders
					for(var i in data8) { // i = team & folder, data[i] = list of scripts
						
						var listFunction = [];
						listFunction = data8[i];
						for (var j=0; j < listFunction.length; j++ ) {
							if (i.includes(h)) {
								if(!trashTeam.includes(h)) {
									trashTeam.push(h);
									addDirToTree = '<li id="li_trash_team_'+h+'" style="display:block" class="closed" foldername="trash_team_'  + h+ ' " group_uid="trash_team">' +
												'<span class="folder trash_team" style="display:inline" uniquefid="undefined_UserFunctions" >' + h + '</span>';
									addDirToTree+='<ul id="ul_trash_team_'+h+'" foldername=trash_team_'+h+' folderid="trash_team_'+h+'"></ul>' +'</li>';
									$j('#ul_recycle_team').append(addDirToTree);
								}
							}
						}
					}
				}

				for (var i in data5) {
					// i = teamName
					// data5[i] = list of folders

					var listFolders = [];
					listFolders = data5[i];
					listFolders.sort();
					
					//for (var j=listFolders.length-1; j >= 0; j-- ) {
					for (var j=0; j < listFolders.length; j++ ) {
						
						listFolders[j] = listFolders[j].replace(i+"/","");
						
						if (listFolders[j].includes("/")) {
							var sf = listFolders[j].split("/");
                            var tt = "";
                            for(e=0;e<sf.length-1;e++) {
                                    tt = tt + "_" + sf[e];
                            }
                            
                            stickto = '#ul_trash_team_folder_' + i + tt;
                            
                            var holddata = listFolders[j];
                            var mdata = holddata.replace(/\//g,"_");
								
							addDirToTree = '<li id="li_trash_team_folder_'+i +'_'+mdata+'" style="display:block" class="closed" foldername="trash_team_folder_'  + mdata + '" group_uid="trash_team_folder">' +
								'<span class="folder trash_team_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + sf[sf.length-1] + '</span>';
								addDirToTree+='<ul id="ul_trash_team_folder_'+ i +'_' + mdata +'" foldername=trash_team_folder_' + i +'_' + mdata +' folderid="trash_team_folder_' + i +'_' + mdata + '"></ul>' +'</li>';
								
						} else {
							stickto = '#ul_trash_team_'+i;
							
							addDirToTree = '<li id="li_trash_team_folder_'+ i +'_' + listFolders[j]+'" style="display:block" class="closed" foldername="'  + i +'_' + listFolders[j] + '" group_uid="trash_team_folder">' +
								'<span class="folder trash_team_folder" style="display:inline" uniquefid="undefined_UserFunctions" >' + listFolders[j] + '</span>';
								addDirToTree+='<ul id="ul_trash_team_folder_'+ i +'_' + listFolders[j] +'" foldername=' + i +'_' + listFolders[j] +' folderid="trash_team_folder_' + i +'_' + listFolders[j] + '"></ul>' +'</li>';
								
						}
						
						$j(stickto).append(addDirToTree);
					}
				}
				
				var counter = -1;

				for (var h in data5) { // h = teamname, data5[i] = list of folders
					for(var i in data8) { // i = team & folder, data[i] = list of scripts
					
						var listFunction = [];
						listFunction = data8[i];
						for (var j=0; j < listFunction.length; j++ ) {
							
							if (i.includes(h)) {
							
								if (listFunction[j].includes(".trash")) {
									var res = listFunction[j].slice(0,-8); // remove .r.trash

									if (res.includes("_")) {
										var modRes = res.split("_");
										res = modRes[1];
									}
									
									var nodehtml2 = "";
	
									var nodehtml2="<div  class='treeFunctionItem' folderid='4' id='function_id_"+counter+"' >";
									 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+res+"'>"+res+"</span>";
									 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>team</span><span class='function_tag' style='background-color:#fd572a'>trash</span></div>";
									 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";
									 
									 nodehtml2+="<input type='button' class='fn_itembtn edit' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Put Back' onclick='fn_putback_team(this,\""+i+"\")'>";
									 nodehtml2+="<input type='button' class='fn_itembtn delete' function_id='"+counter+"' function_name='"+ listFunction[j] +"' value='Purge' onclick='fn_purge_team(this,\""+i+"\")'>";
									 nodehtml2+="</div></div>";
								    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";
									var fpath = i.replace(/\//g, "_");
									$j('#ul_trash_team_folder_'+fpath).append(item2);
	
									counter-=1;
								}

								

							}
						}					
					}
				}

				
				/*var counter = -1;

				for (var h in data5) { // h = teamname, data5[i] = list of folders
					for(var i in data8) { // i = team & folder, data[i] = list of scripts
						
						var listFunction = [];
						listFunction = data8[i];
						for (var j=0; j < listFunction.length; j++ ) {
							
							if (i.includes(h)) {

								var res = listFunction[j].slice(0,-8); // remove .r.trash

								if (res.includes("_")) {
									//var modRes = res.split("_");
									var modRes = res.split("/");
									res = modRes[1];
								}

								var nodehtml2 = "";

								var nodehtml2="<div  class='treeFunctionItem' folderid='4' id='function_id_"+counter+"' >";
								 nodehtml2+="<span access='access_readwrite access_rwx' class='fname' id='"+res+"'>"+res+"</span>";
								 nodehtml2+="<div class='fn_tag_holder' style='margin-left:10px'><span class='function_tag' style='background-color:#3399FF'>team</span><span class='function_tag' style='background-color:#fd572a'>trash</span></div>";
								 nodehtml2+="<div style='float:right;margin-right:7px' class='itmToolBar' trashedDays='0'>";

								nodehtml2+="<input type='button' class='fn_itembtn edit' function_id='"+counter+"' function_name='"+data8[i]+"' value='Put Back' onclick='fn_putback_team(this,\""+i+"\")'>";
				 				nodehtml2+="<input type='button' class='fn_itembtn delete' function_id='"+counter+"' function_name='"+data8[i]+"' value='Purge' onclick='fn_purge_team(this,\""+i+"\")'>";

								 nodehtml2+="</div></div>";
							    var item2="<li taskitem='yes' class='access_readwrite access_rwx' function_id='"+counter+"'>"+nodehtml2+"</li>";

							    //var parts = i.split("_");
							    var parts = i.split("/");

								$j('#ul_trash_team_folder_'+parts[1]).append(item2);
								counter-=1;

							}
						}					
					}
				}*/
			}

		//===================================================================================================================================================================
			
			/**
			 * this block will be invoked only on load (first time)
			 */
			if (!treeMenuRendered) {
				 jqtree = $j(treeSelector + " ul.filetree").treeview({
					animated: 100,
					unique: false,
					persist: "cookie",
					cookieId: "navigationtree"					 

				});
				
				/**
				 * show greyed color folder if no content in the folder. 
				 */
				
				var refreshEmpty = function(){
					$j(treeSelector + " ul[folderid]").each(function(idx, el){
						if ($j(el).children("li").length == 0) {
							//$j(el).parent().css("color", "#D0D0D0");
							$j(el).parent().addClass("emptyfoldercls");
							$j(el).parent().attr("emptyfolder", "yes");
						}else{
							$j(el).parent().removeClass("emptyfoldercls");
							$j(el).parent().removeAttr("emptyfolder");
						}
					});	
				}
				refreshEmpty();
				
				$j(treeSelector +' li[folderitem="yes"].no_folder_axs').children("span.folder").contextMenu([{"Access Restricted, because you're not in the package themes":{icon:'images/noaccess.png'}}],mOptions);
				if(REDITOR_ADMIN){
					//Sort Function inside Folder : Alphien
					$j(treeSelector + '  li[folderitem="yes"] ul[foldername]').sortable({
	
						handle:'img.orderholder',
						stop:function(event,ui){						   
							   var folder_id=$j(this).attr("folderid");
							   var orders=new Array();
							   $j(this).find("li[function_id]").each(function(idx,el){
							   		var oid =$j(el).attr("function_id");
							   		orders[orders.length]=parseInt(oid); 
							   });						  
							   //progress_message("Saving display order..."); 
							   
							   RFunctionMgmt.updateFunctionOrder(parseInt(folder_id),orders,function(respData){progress_message()})	
							   
						},
					});	
					
					//Sort Function inside Folder : Private
					$j(treeSelector + '  li[folderitem="yes private"] ul[foldername]').sortable({
	
						handle:'img.orderholder',
						stop:function(event,ui){						   
							   /*var folder_id=$j(this).attr("folderid");
							   var orders=new Array();
							   $j(this).find("li[function_id]").each(function(idx,el){
							   		var oid =$j(el).attr("function_id");
							   		orders[orders.length]=parseInt(oid); 
							   });						  
							   progress_message("Saving display order...");
							   
							   RFunctionMgmt.updateFunctionOrder(parseInt(folder_id),orders,function(respData){progress_message()})
							   */	
							   
						},
					});

					//Sort Function inside Folder : Team
					if (data4 != null) {
						$j(treeSelector + '  li[folderitem="yes team"] ul[foldername]').sortable({
		
							handle:'img.orderholder',
							stop:function(event,ui){						   
								   /*var folder_id=$j(this).attr("folderid");
								   var orders=new Array();
								   $j(this).find("li[function_id]").each(function(idx,el){
								   		var oid =$j(el).attr("function_id");
								   		orders[orders.length]=parseInt(oid); 
								   });						  
								   progress_message("Saving display order...");
								   
								   RFunctionMgmt.updateFunctionOrder(parseInt(folder_id),orders,function(respData){progress_message()})
								   */	
								   
							},
						});
					}
					
					console_log("sortable done");
					
					//Drag Drop Function to Another Folder : Alphien
					$j(treeSelector + ' li:not([group_uid="trash"])[foldername][folderitem="yes"]').droppable({					
						hoverClass:"ui-droppable-active",
						accept: 'li[taskitem="yes"]', 
						drop: function(event, ui){
						    	 
							var tobj=this;
							var sobj=ui.draggable[0];
							var sel = $j(tobj).children("ul[folderid]");	
							var cb = function(data){
								progress_message();	
								if (data) {								
									message_status("Function has been moved successfully");
									sel.append($j(sobj));								  
								}
							}
							var new_folder_id=$j(sel).attr("folderid");
							
							if (($j(tobj)==null)||($j(sobj))) {
							if($j(sobj).parent().attr("folderid")!=new_folder_id){
								var func_id=$j(sobj).attr("function_id"); 
								progress_message("Please wait...");

								RFunctionMgmt.moveFile2Folder(parseInt(func_id),parseInt(new_folder_id),cb);
							}
							} else {
								message_status("Moving failed. This operation is not allowed!");
							}
						}
					});
					
					//Drag Drop Function to Another Folder : Private
					
					$j(treeSelector + ' li:not([group_uid="trash"])[foldername][folderitem="yes private"]').droppable({
						greedy: true,					
						hoverClass:"ui-droppable-active",
						accept: 'li[taskitem="yes"]', 
						drop: function(event, ui){
							var tobj=this;
							var sobj=ui.draggable[0];
							var sel = $j(tobj).children("ul[folderid]");
							
							var cb = function(data){
								progress_message();	
								if (data) {				
									var destination  = $j(sel).attr("foldername");
									var origin = $j(sobj).parent().attr("foldername");

									var temp = $j(sobj).html();
									var re = new RegExp(origin,'g');
									//var temp2 = temp.replace(origin,destination);
									var temp2 = temp.replace(re,destination);

									sel.append("<li class='access_readwrite access_rwx' taskitem='yes' function_id='" +$j(sobj).attr("function_id")+ "'>" + temp2 + "<\/li>");
									sobj.remove();

									message_status("Function has been moved successfully");
									window.location.reload();
								}
							}
							
								var new_folder_id = $j(sel).attr("folderid");
                                var old_folder_id = $j(sobj).parent().attr("folderid");

				if (old_folder_id.includes("_")) {

                                if(old_folder_id!=new_folder_id){
                                        var func_id=$j(sobj).attr("function_id");
                                        progress_message("Please wait...");

                                        var functionName = $j(sobj).children().text();

                                        new_folder_final = new_folder_id.substring(8);
                                        old_folder_final = old_folder_id.substring(8);
                                        var functionName_final = functionName.substring(0, functionName.length-7);
										
                                       	RFunctionMgmt.movePersonalFile2Folder(new_folder_final,old_folder_final,functionName_final,ALUSER_COOKIE,cb);
                                        
							}
				} else {
					message_status("Moving failed. This operation is not allowed!");
				}
						}
					});


					//Drag Drop Function to Another Folder : Team

					if(data4 != null) {
						$j(treeSelector + ' li:not([group_uid="trash"])[foldername][folderitem="yes team"]').droppable({
							greedy: true,					
							hoverClass:"ui-droppable-active",
							accept: 'li[taskitem="yes"]', 
							drop: function(event, ui){
							    	 
								var tobj=this;
								var sobj=ui.draggable[0];
								var sel = $j(tobj).children("ul[folderid]");
								
								var cb = function(data){
									progress_message();	
									if (data) {									
										var destination  = $j(sel).attr("foldername");
                                        var origin = $j(sobj).parent().attr("foldername");
                                        var temp = $j(sobj).html();
                                        var re = new RegExp(origin,'g');
                                        var temp2 = temp.replace(re,destination);

                                        sel.append("<li class='access_readwrite access_rwx' taskitem='yes' function_id='" +$j(sobj).attr("function_id")+ "'>" + temp2 + "<\/li>");
                                        sobj.remove();

                                        message_status("Function has been moved successfully");
					  					window.location.reload();
									}
								}
								
									var new_folder_id = $j(sel).attr("foldername");
	                                var old_folder_id = $j(sobj).parent().attr("foldername");

									var checkOldFolder = old_folder_id.split("_");
									var checkNewFolder = new_folder_id.split("_");

									// can not move function to another team
									var moveScript = (checkOldFolder[0] == checkNewFolder[0] ? true : false);
									if (!moveScript) {
										message_status("Moving failed. This operation is not allowed!");
									}

	                                if((old_folder_id!=new_folder_id)&&(moveScript)) {
	                                        var func_id=$j(sobj).attr("function_id");
	                                        progress_message("Please wait...");

	                                        var functionName = $j(sobj).children().text();
	                                        var functionName_final = functionName.substring(0, functionName.length-4);
	                                        RFunctionMgmt.moveTeamFile2Folder(new_folder_id,old_folder_id,functionName_final,cb);
								}
							}
						});
					}

					
					console_log("droppable 1 done");
			 
					////enable folder draggable and sortable
					$j(treeSelector + '  li[groupname] ul[groupname]:not([group_uid="trash"])').sortable({		
						handle:'img.orderholder',
						stop:function(event,ui){
							   var group_name=$j(this).attr("groupname");
							   var orders=new Array();
							   $j(this).find("li[folderitem]").each(function(idx,el){
							   		var oid =$j(el).find("ul[folderid]").attr("folderid")
							   		orders[orders.length]=parseInt(oid); 
							   		
							   });
							   progress_message("Saving display order...");
							   RFunctionMgmt.updateFolderOrder(orders,function(respData){progress_message()})
						},
					});
					
					console_log("sortable 2 done");
					
					//accept dragged folder into group
					 $j(treeSelector + ' div[grouptarget]:not([grouptarget="trash"])').droppable({
						hoverClass: "ui-state-active",				
						accept: 'li[foldername][folderitem="yes"]',
						drop: function(event, ui){
								var tobj=this;
								var sobj=ui.draggable;
								var cb = function(data){
									if (data) {
										message_status("Folder has been moved successfully");
										$j(treeSelector + ' ul.filetree  li[groupname="' + $j(tobj).attr("grouptarget") + '"] ul[groupname="' + $j(tobj).attr("grouptarget") + '"]').append(sobj);
									}
								}
								var groupuid=$j(tobj).attr("grouptarget");
								var folder_id=$j(sobj).children("ul[folderid]").attr("folderid");
								
								progress_message("Please wait...");
								RFunctionMgmt.moveFolder(parseInt(folder_id),groupuid,cb);
						}
					});
					
					console_log("droppable 3 done");
					//group re-arrangement...
					$j(treeSelector + ' ul.treeview').sortable({
					 	stop:function(event,ui){
							   var items=$j(treeSelector + ' ul.treeview li[groupname]');
							   var groupids=new Array();
							   for(iab=0;iab<items.length;iab++){						   	   
								   groupids[groupids.length]=$j(items[iab]).attr("groupname");
							   }
							   progress_message("Please wait...");
							   RFunctionMgmt.setGroupOrder(groupids,function(){progress_message()});						 
						},
						handle:'img.dragholder',
					});
				}
			}   
		  
		   if (!treeMenuRendered) {
			   if(false){
				   	$j("#rf_searchFunction input").autoSuggest(rf_functions, {
				   		startText: "Type Function Names",
				   		selectedItemProp: "function_name",
				   		searchObjProps: "function_name",
				   		selectedValuesProp: "id"
				   	});
			   }else{
				   $j(treeSelector +" .treeFunctionItem").mouseenter(function(obj){	
				   		var hdiff=$j(this).find(".itmToolBar").position().top-$j(this).position().top
				   		if(hdiff>5) $j(this).find(".fn_tag_holder").hide();
				   						   	
				   });
				   $j(treeSelector +" .treeFunctionItem").mouseleave(function(obj){				       
				   	    $j(this).find(".itmToolBar .usagebtn").remove();
				   	    if(!$j(this).find(".fn_tag_holder").is(':visible')){ 
				   	        $j(this).find(".fn_tag_holder").show();
				   	    }
				   });
				   
				   if (data3 == true) {

					   $j(treeSelector +" li[folderitem]").mouseenter(function(obj){
						   if($j(this).find("> span.packageinfo_box").length>0){   }else{	
							   
							   /*if ($j(this).find("> span.private_folder").length>0) { } else {
								   var ul=$j(this).find("ul[folderid]");						  
								   ul.before("<span class='packageinfo_box'><a  class='packageinfo' href='#'>Package Info</a></span>");						   
								   var pname=$j(this).find("span.folder").text();										
								   $j(this).find("a.packageinfo").click(function(evt){
									   
									   rf_packinfoShow(pname);
									   
								   });
							   }*/
							  
						   }
					   });
				   }
				   
				   $j(treeSelector +" li[folderitem]").mouseleave(function(obj){				       
				     	$j(this).find("> span.packageinfo_box").remove();    
				   });
				   $j("#packgeInfoDialog").mouseleave(function(obj){	
					   $j(this).hide("slow");
				   });
					
				   $j('#rf_searchFunctionInp').qtip(); 
				   $j('#rf_searchFunctionInp').multiSelect({	
					    width:"100%",
					    postcall:rf_search,
						source: function( request, response ) {							
							var xhr = new XMLHttpRequest();
							xhr.open("GET", "autocomplete_scheduler.jsp?xhr_rfunction=yes&term="+request.term, true);
							xhr.onreadystatechange = function() {
							  if (xhr.readyState == 4) {			 
								var data=JSON.parse(xhr.responseText);
								var respdata=[];
								var selected=$j('#rf_searchFunctionInp').multiSelect("getSelected");
								for(iab=0;iab<data.length;iab++){
								    var loc="<span class='broad'>"+data[iab].group_name+"</span> <span class='specific'> "+data[iab].folder_name+"</span>";
									var dt=data[iab].last_modified!=null
									                    ?moment(data[iab].last_modified, "YYYY-MM-DD HH:mm:ss").fromNow()
														:"";
				                    var themses="";
									if(data[iab].stags!=null){
										var arr=data[iab].stags.split(",");
										arr.forEach(function(ele){
											themses+=ele.indexOf("thm-")>=0 ? "<div class='tag'>"+ele.substring(ele.indexOf("thm-")+4,ele.length)+"</div>":"";
										});
									}      
									if($j.inArray(data[iab].function_name,selected)==-1){
										var obj={
											value:data[iab].function_name,						
											label:"<div class='autocomp_item'><div class='item_name'>"+data[iab].function_name+"</div>  <div class='item_foot'><div class='item_f1'>"+loc+"</div><div class='item_f3'>"+themses+"</div><div class='item_f2'>"+dt+"</div></div></div>"
										}
										respdata[respdata.length]=obj;
									}
								}
								response(respdata);				
							  }
							}
							xhr.send();
						}
					});
			   }
		   }

		   //Rename Alphien Function
		   if(data3 == true) {
			  $j(treeSelector+' ul[groupname="alphien"]:not([groupname="trash"]) .treeFunctionItem >span').inlineEdit({
			    buttons:'<button class="save fn_itembtn">Rename</button> <button class="cancel fn_itembtn">cancel</button>',
			    save: function(el, data) {
			      //return confirm('Change name to '+ data.value +'?');
				  if(confirm("Are you sure you wish to rename this function ?")){
				  	  //var foldid=$j(this).parent().attr("folderid");
					var funid=$j(this).parent().attr("id");
					funid=funid.substring("function_id_".length);
					var respBack=function(data){
						progress_message();
						if (data != null && data) {
							$j('a[href="#rf_tabs-' + funid + '"]').html(data.value);
						}
					}
					progress_message("Please wait while renaming...");			  
					RFunctionMgmt.renameFunction(data.value,parseInt(funid),respBack)			  
					  
				  }
			    }
			   });
		   }

			   //Rename Private Function
			   $j(treeSelector+' ul[groupname="private"]:not([groupname="trash"]) .treeFunctionItem >span').inlineEdit({
			    buttons:'<button class="save fn_itembtn">Rename</button> <button class="cancel fn_itembtn">cancel</button>',
			    save: function(el, data) {
				  if(confirm("Are you sure you wish to rename this function ?")){
					var funid=$j(this).attr("id");
					//var foldid="#"+funid;
					//var foldname=$j(foldid).parent().parent().parent().attr("foldername");
					var foldname=$j(this).parent().parent().parent().attr("foldername");
					var treeTraversal = $j("ul").find("span").map(function(){
					return this.id;}).get();
					//var reg =new RegExp("^[a-z][a-zA-Z0-9.]{1,50}");
					var reg =new RegExp("^[a-zA-Z0-9][a-zA-Z0-9]{2,50}");
						if(treeTraversal.indexOf(data.value)>=0 || !(reg.test(data.value)))
						{
						$j(this).replaceWith("<span access='access_readwrite access_rwx' class='fname' id='"+funid+"'>"+funid+"</span>");
						message_status("Renaming failed");
						}
					else
						{
						var respBack=function(data){
							progress_message();
							if (data != null && data) 
								{
								$j('a[href="#rf_tabs-' + funid + '"]').html(data.value);
								message_status("Renaming success");
								}
							}
						}

					progress_message("Please wait while renaming...");	
					RFunctionMgmt.renamePrivateFunction(data.value,funid,ALUSER_COOKIE,foldname,respBack);		   
				  }
			    }
			   });  
				

				if (data4 != null) {
				   //Rename Team Function
				   $j(treeSelector+' ul[groupname="team"]:not([groupname="trash"]) .treeFunctionItem >span').inlineEdit({
				    buttons:'<button class="save fn_itembtn">Rename</button> <button class="cancel fn_itembtn">cancel</button>',
				    save: function(el, data) {
					  if(confirm("Are you sure you wish to rename this function ?")){
						var funid=$j(this).attr("id");
						var foldid="#"+funid;
						var foldname=$j(foldid).parent().parent().parent().attr("foldername");
						var treeTraversal = $j("ul").find("span").map(function(){
						return this.id;}).get();
						//var reg =new RegExp("^[a-z][a-zA-Z0-9.]{1,50}");
						var reg =new RegExp("^[a-zA-Z0-9][a-zA-Z0-9]{2,50}");
							if(treeTraversal.indexOf(data.value)>=0 || !(reg.test(data.value)))
							{
							$j(this).replaceWith("<span access='access_readwrite access_rwx' class='fname' id='"+funid+"'>"+funid+"</span>");
							message_status("Renaming failed");
							}
						else
							{
							var respBack=function(data){
								progress_message();
								if (data != null && data) 
									{
									$j('a[href="#rf_tabs-' + funid + '"]').html(data.value);
									message_status("Renaming success");
									}
								}
							}

						progress_message("Please wait while renaming...");	
						RFunctionMgmt.renameTeamFunction(data.value,funid,ALUSER_COOKIE,foldname,respBack);		   
					  }
				    }
				   }); 
				}

		   treeMenuRendered=true;
		
		   //adding put back and delete permanent buttons for trash items
		   
		   $j(treeSelector+' ul[groupname="trash"] .treeFunctionItem .itmToolBar').each(function(idx,el){
		   	         var fn_id=$j(el).find("input.fn_itembtn").attr("function_id");
		   	         if($j(el).find("input.putback").length==0){
		   	         	var daysdel=parseInt($j(el).attr("trasheddays"));
		   	         	$j(el).append("<input type='button' class='fn_itembtn putback' function_id='"+fn_id+"' value='Put Back' title='Delete Task' onclick='fn_putback(this)'>");
		   	         	if(daysdel>=7){		   	            
		   	         		$j(el).append("<input type='button' class='fn_itembtn purge' function_id='"+fn_id+"' value='Purge' title='Removes from Trash (Permenently)' onclick='fn_purge(this)'>");
		   	         	} 
		   	         }
		   });
		   console_log("adding trashed days ");
		    }); // end of getTrashTeamFunction
		    }); // end of getTrashPrivateFunction
		    }); // end of get Team function
		    }); // end of get Team folder
		    }); // end of get user's Team
			}); // end of isTOMUser
			}); // end of asynchronous get Personal Functions 
			}); // end of Header based TOM 
		}); // // end of asynchronous get Personal Folder
	}
}

var previous_logtime=new Date().getTime();
function console_log(msg){
	if(false){
		var delay=new Date().getTime()-previous_logtime
		console.log("delay:"+delay);
		console.log(msg);
		console.log("");		
		previous_logtime=new Date().getTime();
	}
}

function fn_purge(btnobj) {
	 var func_id=$j(btnobj).attr("function_id"); 
	 var respBack=function(flag){
	 	if(flag){
	 		message_status("Deleted Function has been purged successfully");
	 		var node_s = $j(treeSelector + ' li[taskitem="yes"][function_id="' + func_id + '"]');
	 		node_s.fadeOut(300, function(){ node_s.remove();});

	 	}else{
	 		message_status("Could not purge function!");
	 	}
	 }
	 if(confirm("This option will remove the function perminently, Are you really sure ?")) {
	 	RFunctionMgmt.purgeFunction(parseInt(func_id),respBack);
	 }
}

function fn_putback(btnobj) {
	 var func_id=$j(btnobj).attr("function_id"); 
	 $j( "#dialog_folders" ).dialog({
			resizable: false,			 
			width:400,
			modal: true,		
			dialogClass: 'rf_dialog',
			buttons: {
				Cancel: function() {
					$j( this ).dialog( "close" );
				}, 	 				
			}
	 });
	 $j("#dialog_foldersBdy").html("please wait...");
	 var treeID="#dialog_foldersBdy";
	 var respBack=function(data1){
	 	
	 		if (data1.groups != null) {
				$j(treeID).html("");  //removes if there any loading message.
				$j(treeID).append("<ul class='filetree'></ul>");
				var groupnodes="";		
			
				for (iab=0;iab<data1.groups.length;iab++) {
					uik=data1.groups[iab].key;
					groupname=data1.groups[iab].value;
					if(uik!='trash'){
						var htmlid = "folders_root_" + uik;
		 				var stylecode=(rf_groupColor[uik]!=null && rf_groupColor[uik]!='')? " style=' background-image:none;background-color:"+rf_groupColor[uik]+"'":"";					
						var nodehtm = "<div class='FunctionGroupBar' groupTarget='" + uik + "' id='" + htmlid + "' "+stylecode+" >";
						nodehtm += "<div style='display:inline;vertical-align:top;' class='label_groupname'><b>" + groupname + "</b></div></div>";
						var ulgrpid="folders_groupname_"+uik;
						groupnodes += "<li class='closed' groupname='" + uik + "'>" + nodehtm + "<ul id='"+ulgrpid+"' groupname='" + uik + "'></ul></li>";
					}
				}
				groupnodes += "";
				$j(treeID + " ul.filetree").append(groupnodes);
			}
			var idGen=function(folder,element,prefix){
				 
				folder=folder.replace(/-|\//g, "-");
				folder=folder.replace(/ /g,"_");
 				folder=element+"_"+prefix+"_"+folder;	
				return folder;
			}
			
			if (data1.folders != null) {				
				for (ibc = 0; ibc < data1.folders.length; ibc++) {					
						var group_uid=data1.folders[ibc].group_uid;
						var folderpath=data1.folders[ibc].folder_name;					
						var folder='<li class="closed" function_id="'+func_id+'" foldername="'+data1.folders[ibc].folder_name+'" folderid="'+data1.folders[ibc].id+'" style="cursor:pointer" onclick="fn_putbackConf(this)" ><span class="folder" >'+data1.folders[ibc].folder_name+'</span></li>';
						var ulgrpid="folders_groupname_"+group_uid;
						$j('#'+ulgrpid).append(folder);
					}
			 }
			
			$j(treeID + " ul.filetree").treeview({
				animated: 100,
				unique: false,
				persist: "cookie",
				cookieId: "navigationtree"					 
			});
	 }
	 RFunctionMgmt.getFolderTree(respBack);
}

function fn_putbackConf(liobj){
	var folder_id=$j(liobj).attr("folderid");
	var func_id=$j(liobj).attr("function_id");
	var foldername=$j(liobj).attr("foldername");
	$j( "#dialog_folders" ).dialog("close");
    var respBack=function(data){
    	if(data!=null){
    		var fn_id = func_id
			
			var node_s = $j(treeSelector + ' li[taskitem="yes"][function_id="' + fn_id + '"]');
			$j(node_s).find("input.putback").remove();
			$j(node_s).find(".rf_tabopen").removeClass("rf_tabopen");
			$j(treeSelector + ' ul[folderid="'+folder_id+'"][foldername="'+foldername+'"]').append(node_s);
    		message_status("Function has been put back to the folder, Please refresh this page");
    	}
    }	
	RFunctionMgmt.putbackFunction(parseInt(func_id),parseInt(folder_id),respBack);
}
 
var tempOpenData=null;
function rf_search(){
	var data=$j('#rf_searchFunctionInp').multiSelect("getSelected");       
	var rtn=data.join(",");	
	if (rtn != '') {	
		var respBack=function(data){		 
			progress_message();
			if(data!=null){
				tempOpenData=data;				
				for(ibc=0;ibc<data.length;ibc++){
					var thisdata=data[ibc];
					var fn_id=thisdata.data.id;
					if ($j("#rf_tabs-" + fn_id).length > 0) {														
						var index=$j('#rf_tabs a[href="#rf_tabs-'+  fn_id+'"]').parent().index()
						rf_editorTab.tabs('select', index);		
					}else{											
						setTimeout("fn_edit(0,tempOpenData["+ibc+"])",(ibc*1500));						
					}
					
				}
				$j('#rf_searchFunctionInp').multiSelect("removeAllSelected");
			}
		};
	    progress_message("Please wait while opening functions...");
		var readonly=true;
		RFunctionMgmt.getRFunctions(rtn,readonly,respBack);
	}else {
		alert("Function name is not selected, minimum 1 fuction required");
	}
}

function rf_open(fn_name){
	if (fn_name != '') {		
		var respBack=function(data){		 
			progress_message();
			if(data!=null){
				
				tempOpenData=data;				
				for(ibc=0;ibc<data.length;ibc++){
					var thisdata=data[ibc];
					var fn_id=thisdata.data.id;
					if ($j("#rf_tabs-" + fn_id).length > 0) {														
						var index=$j('#rf_tabs a[href="#rf_tabs-'+  fn_id+'"]').parent().index()
						rf_editorTab.tabs('select', index);		
					}else{											
						setTimeout("fn_edit(0,tempOpenData["+ibc+"])",(ibc*1500));						
					}
				}
			}
		}
	    progress_message("Please wait while opening functions...");
		var readonly=true;		
		if(typeof fn_name=='string'){
			RFunctionMgmt.getRFunctions(fn_name,readonly,respBack);
		}else{
			respBack(fn_name);
		}
	}else {
		alert("Function name is not selected, minimum 1 fuction required");
	}
}

function rf_ctxCreateFolder(group_id) {
	var foldername=prompt("Folder name:");
	//var groupIDFinal = group_id.replace(/ /g,"\ ");
	//var groupIDFinal = group_id.trim();
	//console.log(group_id);
	//console.log(groupIDFinal);
	if(foldername!=null && foldername!=''){
		RFunctionMgmt.createFolder(foldername,group_id,function(data){
			window.location.reload();
		});
	}
}

var currentTabCotent=null;

/////////////////////////////////////////////////////////////////////////// button for trash -team

function fn_putback_team(tobj,teamnfolder) {
	  var fn_name=$j(tobj).attr("function_name");
	  progress_message("Please wait...");
	  
	  var respback = function(data) {
		  
		  if(data) {
			  message_status("Function back to origin folder");
			  window.location.reload();
		  } else {
			  message_status("Can not revert function. Please check directory permission");
		  }
	  }
	  
	  RFunctionMgmt.putBackTeamFunction(fn_name, teamnfolder, respback);
}

function fn_purge_team(tobj,teamnfolder) {
	if (confirm("Are you sure you wish to purge this function ?")) {
		  var fn_name=$j(tobj).attr("function_name");
		  progress_message("Please wait while deleting function...");
		  
		  var respback = function(data) {
			  
			  if(data==1) {
				  message_status("Function purged");
				  window.location.reload();
			  } else {
				  message_status("Can not delete function. Please check directory permission");
			  }
		  }
		  
		  RFunctionMgmt.purgeTeamFunction(fn_name, teamnfolder, respback);
	}
}


/////////////////////////////////////////////////////////////////////////// button for trash -personal

function fn_putback_private(tobj,folder) {
	  var fn_name=$j(tobj).attr("function_name");
	  progress_message("Please wait...");
	  
	  var respback = function(data) {
		  
		  if(data) {
			  message_status("Function back to origin folder");
			  window.location.reload();
		  } else {
			  message_status("Can not revert function. Please check directory permission");
		  }
	  }
	  
	  RFunctionMgmt.putBackPrivateFunction(fn_name, folder, ALUSER_COOKIE, respback);
}

function fn_purge_private(tobj,folder) {
	if (confirm("Are you sure you wish to purge this function ?")) {
		  var fn_name=$j(tobj).attr("function_name");
		  progress_message("Please wait while deleting function...");
		  
		  var respback = function(data) {
			  
			  if(data==1) {
				  message_status("Function purged");
				  window.location.reload();
			  } else {
				  message_status("Can not delete function. Please check directory permission");
			  }
		  }
		  
		  RFunctionMgmt.purgePrivateFunction(fn_name, folder, ALUSER_COOKIE, respback);
	}
}

/////////////////////////////////////////////////////////////////////////// button for Team Group
function fn_edit_team(tobj,teamnfolder,data) {

	if (data == null) {
		var fn_id = $j(tobj).attr("function_id");
		var fn_name = $j(tobj).attr("function_name");
		var flag = $j(tobj).attr("flag");

	}

	var respBackTeam=function(data,editrefresh){
		
		var teamnfolder;
		var scriptContent;
		
		if(editrefresh==null){	
		   editrefresh=false; //by default
		}
		progress_message();
		$j(".folder_view_toggle").show();
		rf_EditorTyped[fn_id]=false;
		if(data!=null ){
			var toolbar1="file_open";
			var plugins1="reditor";
			
			if(typeof data.readonly=='boolean' && data.readonly){
				toolbar1="reditor_lock1";
				plugins1 = "reditorlite";
			}
			
			var readonly="false";
			if (plugins1 == 'reditorlite') {
				readonly="true";
			}
			
			for(var i in data) {
				// key = i = teamnfolder
				// value = data[i] = content
				

				if (i == "content") {
					scriptContent = data[i];
				}

				if (i == "team_name") {
					teamnfolder = data[i];
				}
				
			}

            for (var j in scriptContent) {
                var pureScript = scriptContent[j];

            }

			fn_id = data.fn_id;
			var htm='<div class="rf_lockedBy" id="rf_lockedBy_'+fn_id+'"></div>';
			htm+='<div id="rf_stabs_'+fn_id+'" readonly="'+readonly+'" class="rf_subtab">';
			htm+=' <div align="right" style="display:inline;float:right;padding-top:0px;"><input id="fn_btn_save_'+fn_id+'" z-index="1000" style="display:none;font-size:1.1em;width:100px;height:26px" type="button" function_id="'+fn_id+'" onclick="saveRFunctionTeam(\''+data.fn_name+'\', \''+teamnfolder+'\')" value="Save"></div>';
			htm+='	<ul>';
			htm+='			<li><a  href="#rf_stabs1_'+fn_id+'">Code</a></li>';

			htm+='			<li><a href="#rf_stabs2_'+fn_id+'">Revisions</a></li>';
			htm+='                  <li><a href="#rf_stabs3_'+fn_id+'">Access Rights</a></li>'; // team add Themes / Notification tab

			htm+='		</ul>';
			htm+='		<div id="rf_stabs1_'+fn_id+'">';				
			htm+='			<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>';
			htm+='		</div>';

				htm+='		<div id="rf_stabs2_'+fn_id+'">';
				htm+='        <div class="rev_panel" style="height:89%"></div>';			
				htm+='		</div>';

			htm+='          <div id="rf_stabs3_'+fn_id+'">';                         // team add Themes / Notification tab
            htm+='           <div class="tags_panel" style="width:95%;margin:20px;"></div>';
            htm+='          </div>';

htm+='</div>'; 		
			
			if (!editrefresh) {
				currentTabCotent=htm;
				
				var fn_name_res = fn_name.slice(0,-2);

				if (fn_name_res.includes("_")) {
					var modRes = fn_name_res.split("_");
					fn_name_res = modRes[1];
				}
				
				rf_editorTab.tabs("add", "#rf_tabs-" + fn_id, fn_name_res);
				var fn_name11 = fn_name;
				$j("#rf_stabs_" + fn_id).tabs({
					selected: 0, //gama1

					select: function(event, ui){
								if (ui.index == 1) {
								fn_getRevision(fn_name11, ui.panel.id);
								ui.panel.isLoaded = true;
							}
					}
				});
			}else{
				$j("#rf_stabs_"+fn_id).attr("readonly",readonly+"");
				/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
					editAreaLoader.delete_instance('rf_editor_area_'+fn_id);
				}else if(CODE_EDITOR==CODE_ACE_EDITOR){ // kalo di buka : Cannot read property 'destroy' of undefined*/

                    ACE_EDITORS['rf_editor_area_'+fn_id].destroy();					
					$j("#rf_stabs1_"+fn_id).children().remove();
					$j("#rf_stabs1_"+fn_id).html('<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>');
				//}				
				$j("#rf_stabs_" + fn_id).tabs({selected:0});				
			}
			
			// team add Themes / Notification tab

    	    var members = data.members;

	        to_showAccess("#rf_stabs_"+fn_id ,members,fn_id,(plugins1=='reditorlite'?"R":""));
			
			var ea_id="rf_editor_area_"+fn_id;
			
			$j("#"+ea_id).val(pureScript); // gama4
			
			var isEditable=(plugins1=='reditorlite')?false:true;
			
			/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
				areaEditOptions[fn_id]={
						id: ea_id // textarea id
						,syntax: "r" // syntax to be uses for highgliting
						,start_highlight: true // to display with highlight mode on start-up
						,toolbar:toolbar1
						,allow_toggle: false
						,allow_resize: "both"
						,plugins:plugins1
						,font_size:8
						,font_family: "verdana, monospace"
						,is_editable:(plugins1=='reditorlite')?false:true
					    ,save_callback:"saveRFunction"
				};			
				editAreaLoader.init(areaEditOptions[fn_id]);
			}else if(CODE_EDITOR==CODE_ACE_EDITOR){*/
					var parnt=$j("#"+ea_id).parent(); $j("#"+ea_id).remove();
					var ttl=fn_name;
					
					var toolbar_1="";
					var max_1adjust=isEditable?"adjust_max":"";
					$j(parnt).append(toolbar_1+"<div class='icon_fullscreen "+max_1adjust+"'><a href='#' fid='"+ea_id+"' screentitle='"+ttl+"' onclick='rf_acefull(this); return false;'><img src='images/expand_fullscreen.png'></a></div><div class='ace_editor' style='display:none' id='"+ea_id+"'></div>");
		    		
					var fieldval1=pureScript==null?"":pureScript; // shows content of a team function 
					var tm = function(ea_id,fieldval1){
						$j("#"+ea_id).show();						 
						ACE_EDITORS[ea_id]= ace.edit(ea_id);
						ACE_EDITORS[ea_id].getSession().setValue(fieldval1);
						var is_readonly=!isEditable;
						setACE_Default(ACE_EDITORS[ea_id],is_readonly);						
					}
					setTimeout(tm,500,ea_id,fieldval1);
			//}
			
			editor_initiated=true;			
			
			if(rf_editorTab.length==1){
				  rf_highLightFunc(fn_id);
			}
			
			if(plugins1=='reditorlite'){
				$j("#fn_btn_save_"+fn_id).hide();
			}else{
				$j("#fn_btn_save_"+fn_id).show();
			}
		}
	}

	var readonly=true;
	if(flag!=null && flag=='edit'){
			var readonly=false;
	}

	if ($j("#rf_tabs-" + fn_id).length > 0) {
			processTb = false;
			var index=$j('#rf_tabs a[href="#rf_tabs-'+  fn_id+'"]').parent().index()
			rf_editorTab.tabs('select', index);
			RFunctionMgmt.getRFunctionTeam(fn_id,fn_name,readonly, teamnfolder, function(data){
				respBackTeam(data,true);
			});
		} else {
			progress_message("Please wait...");
			RFunctionMgmt.getRFunctionTeam(fn_id,fn_name,readonly, teamnfolder, respBackTeam);
	}


}
/////////////////////////////////////////////////////////////////////////// button for Alphien Group and Private Group
function fn_edit(tobj,data) {
	if (data == null) {
		var fn_id = $j(tobj).attr("function_id");
		var fn_name = $j(tobj).attr("function_name");
		var flag = $j(tobj).attr("flag");
	}else{
		var fn_id = data.data.id;
		var fn_name = data.data.function_name;
	}
 
	var respBack=function(data,editrefresh){
		RFunctionMgmt.isTOMUser(function(data3) { 
		if(editrefresh==null){	
		   editrefresh=false; //by default 
		}
		progress_message();
		$j(".folder_view_toggle").show();

		rf_EditorTyped[fn_id]=false;
		
		if(data!=null ){
			var toolbar1="";
			var plugins1="";
			var lockedMsg=null;
			if(data.isAuthorized!=null && data.isAuthorized){		
				toolbar1="file_open";				
				plugins1="reditor";
			}else{
				toolbar1="ReadOnly";
				plugins1="reditorlite";
			}
			if(data.data.lockedby!=null){
				if (data.authorizedUser == data.data.lockedby) {
					plugins1 = "reditor";					
					toolbar1="file_open";
				}else{
					toolbar1="reditor_lock1";
					plugins1 = "reditorlite";
					lockedMsg="Currently Edited by "+data.data.lockedby;
				}				
			}
			
			if(typeof data.readonly=='boolean' && data.readonly){
				toolbar1="reditor_lock1";
				plugins1 = "reditorlite";
			}
			
			var readonly="false";
			if (plugins1 == 'reditorlite') {
				readonly="true";
			}
			 
			var htm='<div class="rf_lockedBy" id="rf_lockedBy_'+fn_id+'"></div>';
			htm+='<div id="rf_stabs_'+fn_id+'" readonly="'+readonly+'" class="rf_subtab">';
			htm+=' <div align="right" style="display:inline;float:right;padding-top:0px;"><input id="fn_btn_save_'+fn_id+'" z-index="1000" style="display:none;font-size:1.1em;width:100px;height:26px" type="button" function_id="'+fn_id+'" onclick="saveRFunction()" value="Update"></div>';
			htm+='	<ul>';
			
			htm+='			<li><a href="#rf_stabs4_'+fn_id+'">Wiki</a></li>';
			
			if (data3==true) {
				htm+='			<li><a href="#rf_stabs2_'+fn_id+'">Revisions</a></li>';
			}
			htm+='                  <li><a href="#rf_stabs3_'+fn_id+'">Themes & Notification</a></li>';
			htm+='			<li><a  href="#rf_stabs1_'+fn_id+'">Code</a></li>';
			htm+='		</ul>';
			htm+='		<div id="rf_stabs4_'+fn_id+'">';
			htm+='        <div class="wiki_panel" style="height:89%;"></div>';			
			htm+='		</div>';
			
			if (data3==true) {
				htm+='		<div id="rf_stabs2_'+fn_id+'">';
				htm+='        <div class="rev_panel" style="height:89%"></div>';			
				htm+='		</div>';
			}
			
			htm+='		<div id="rf_stabs3_'+fn_id+'">';			 
			htm+='		     <h3 class="rf_subheader">Tags</h3>	';
			htm+='           <div class="tags_panel" style="width:95%;margin:20px;"></div>';
			htm+='		</div>';
			htm+='		<div id="rf_stabs1_'+fn_id+'">';				
			htm+='			<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>';
			htm+='		</div>';
			htm+='</div>';		
			
			if(data.access!=null && ( data.access=='R' || data.access=='RX') ){
				toolbar1="reditor_lock1";
				plugins1 = "reditorlite";
			}
			
			if (!editrefresh) {
				currentTabCotent=htm;
				rf_editorTab.tabs("add", "#rf_tabs-" + fn_id, fn_name);
				var fn_name11 = fn_name;
				$j("#rf_stabs_" + fn_id).tabs({
					//selected: 2,
					selected: 1,
					select: function(event, ui){

							if (ui.index == 1) {
							fn_getRevision(fn_name11, ui.panel.id);
							ui.panel.isLoaded = true;
							}

						if (typeof ui.panel.isLoaded == 'undefined' && ui.index == 0) {
							fn_getWiki(fn_name11, ui.panel.id);
							ui.panel.isLoaded = true;
						}
					}
				});
				
				$j("#rf_stabs_" + fn_id).tabs({
					selected: 0
				});
				
				
			}else{
				$j("#rf_stabs_"+fn_id).attr("readonly",readonly+"");
				/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
					editAreaLoader.delete_instance('rf_editor_area_'+fn_id);
				}else if(CODE_EDITOR==CODE_ACE_EDITOR){*/
					ACE_EDITORS['rf_editor_area_'+fn_id].destroy();					
					$j("#rf_stabs1_"+fn_id).children().remove();
					$j("#rf_stabs1_"+fn_id).html('<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>');
				//}				
				$j("#rf_stabs_" + fn_id).tabs({selected:0});				
			}

			if(lockedMsg!=null){
				$j("#rf_lockedBy_"+fn_id).html(lockedMsg);
				$j("#rf_lockedBy_"+fn_id).addClass("showOn");
			}
			
			//if (data3 == true) { //gamaliel
				if(data.tag_follow!=null ){
					data.tag_follow.authorizedUser=data.authorizedUser; 
					to_showTags4Item("#rf_stabs_"+fn_id ,data.tag_follow,fn_id,(plugins1=='reditorlite'?"R":""),"Selected Themes",data3);
				}
			//}
			
			// to make the owner appears on top.
			//if (data3 == true) {	//gamaliel
				if(data.data.owner_tag_id!=null && data.data.owner_tag_id>0){
					var otag=$j("#rf_stabs_"+fn_id+" .task_tag_owner li[tag_id='"+data.data.owner_tag_id+"']");
					if(otag!=null && otag.length>0 && otag.siblings().length>0){
						otag.insertBefore(otag.siblings(':eq(0)'));
					}				
				}
			//}
 
			var ea_id="rf_editor_area_"+fn_id;
			$j("#"+ea_id).val(data.content);
			var isEditable=(plugins1=='reditorlite')?false:true;
			
			/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
				areaEditOptions[fn_id]={
						id: ea_id // textarea id
						,syntax: "r" // syntax to be uses for highgliting
						,start_highlight: true // to display with highlight mode on start-up
						,toolbar:toolbar1
						,allow_toggle: false
						,allow_resize: "both"
						,plugins:plugins1
						,font_size:8
						,font_family: "verdana, monospace"
						,is_editable:(plugins1=='reditorlite')?false:true
					    ,save_callback:"saveRFunction"
				};			
				editAreaLoader.init(areaEditOptions[fn_id]);
			}else if(CODE_EDITOR==CODE_ACE_EDITOR){*/
					var parnt=$j("#"+ea_id).parent(); $j("#"+ea_id).remove();
					var ttl=fn_name;
					var toolbar_1="";
					var max_1adjust=isEditable?"adjust_max":"";
					$j(parnt).append(toolbar_1+"<div class='icon_fullscreen "+max_1adjust+"'><a href='#' fid='"+ea_id+"' screentitle='"+ttl+"' onclick='rf_acefull(this); return false;'><img src='images/expand_fullscreen.png'></a></div><div class='ace_editor' style='display:none' id='"+ea_id+"'></div>");

				    var fieldval1=data.content==null?"":data.content				    		
					var tm = function(ea_id,fieldval1){
						$j("#"+ea_id).show();						 
						ACE_EDITORS[ea_id]= ace.edit(ea_id);
						ACE_EDITORS[ea_id].getSession().setValue(fieldval1);
						var is_readonly=!isEditable;
						setACE_Default(ACE_EDITORS[ea_id],is_readonly);						
					}
					setTimeout(tm,500,ea_id,fieldval1);
			//}
			
			editor_initiated=true;			
			
			if(rf_editorTab.length==1){
				  rf_highLightFunc(fn_id);
			}
			if(data.path!=null){
				setTimeout(function(){rf_editorSetPath(ea_id,data.path)},1000);
			}
			
			if(plugins1=='reditorlite'){
				$j("#fn_btn_save_"+fn_id).hide();
			}else{
				$j("#fn_btn_save_"+fn_id).show();
			}
		}
	}); //end isTOMUser function
	}
	
	var respBackPrivate=function(data,editrefresh){
		
		var parentDir;
		var scriptContent;
		
		if(editrefresh==null){	
		   editrefresh=false; //by default
		}
		progress_message();
		$j(".folder_view_toggle").show();
		rf_EditorTyped[fn_id]=false;
		if(data!=null ){
			var toolbar1="file_open";
			var plugins1="reditor";
			
			if(typeof data.readonly=='boolean' && data.readonly){
				toolbar1="reditor_lock1";
				plugins1 = "reditorlite";
			}
			
			var readonly="false";
			if (plugins1 == 'reditorlite') {
				readonly="true";
			}
			
			for(var i in data.content) {
				// key = i = parentdir
				// value = data[i] = content
				
				parentDir = i;
				scriptContent = data.content[i];
				
			}

			fn_id = data.fn_id;
			var htm='<div class="rf_lockedBy" id="rf_lockedBy_'+fn_id+'"></div>';
			htm+='<div id="rf_stabs_'+fn_id+'" readonly="'+readonly+'" class="rf_subtab">';
			htm+=' <div align="right" style="display:inline;float:right;padding-top:0px;"><input id="fn_btn_save_'+fn_id+'" z-index="1000" style="display:none;font-size:1.1em;width:100px;height:26px" type="button" function_id="'+fn_id+'" onclick="saveRFunctionPriv(\''+data.fn_name+'\', \''+parentDir+'\')" value="Save"></div>';
			htm+='	<ul>';
			htm+='			<li><a  href="#rf_stabs1_'+fn_id+'">Code</a></li>';

			htm+='			<li><a href="#rf_stabs2_'+fn_id+'">Revisions</a></li>';
			
			htm+='                  <li><a href="#rf_stabs3_'+fn_id+'">Access Rights</a></li>'; // team add Themes / Notification tab

			htm+='		</ul>';
			htm+='		<div id="rf_stabs1_'+fn_id+'">';				
			htm+='			<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>';
			htm+='		</div>';


				htm+='		<div id="rf_stabs2_'+fn_id+'">';
				htm+='        <div class="rev_panel" style="height:89%"></div>';			
				htm+='		</div>';
				
				htm+='          <div id="rf_stabs3_'+fn_id+'">';                         // team add Themes / Notification tab
                htm+='           <div class="tags_panel" style="width:95%;margin:20px;"></div>';
                htm+='          </div>';

			htm+='</div>';			
			
			if (!editrefresh) {
				currentTabCotent=htm;
				
				var fn_name_res = fn_name.slice(0,-2);

				if (fn_name_res.includes("_")) {
					var modRes = fn_name_res.split("_");
					fn_name_res = modRes[1];
				}
				
				rf_editorTab.tabs("add", "#rf_tabs-" + fn_id, fn_name_res);
				var fn_name11 = fn_name;
				$j("#rf_stabs_" + fn_id).tabs({
					
					selected: 0,

					select: function(event, ui){
								if (ui.index == 1) {
								fn_getRevision(fn_name11, ui.panel.id);
								ui.panel.isLoaded = true;
							}
					}


				});
			}else{
				$j("#rf_stabs_"+fn_id).attr("readonly",readonly+"");
				/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
					editAreaLoader.delete_instance('rf_editor_area_'+fn_id);
				}else if(CODE_EDITOR==CODE_ACE_EDITOR){*/
					ACE_EDITORS['rf_editor_area_'+fn_id].destroy();					
					$j("#rf_stabs1_"+fn_id).children().remove();
					$j("#rf_stabs1_"+fn_id).html('<textarea id="rf_editor_area_'+fn_id+'" name="content" style="width:100%; height:88%;overflow:auto;"></textarea>');
				//}				
				$j("#rf_stabs_" + fn_id).tabs({selected:0});				
			}
			
			// private add Themes / Notification tab

           to_showAccessPrivate("#rf_stabs_"+fn_id ,data.username,fn_id,(plugins1=='reditorlite'?"R":""));
			
			
			var ea_id="rf_editor_area_"+fn_id;
			
			$j("#"+ea_id).val(scriptContent); // gama4
			
			var isEditable=(plugins1=='reditorlite')?false:true;
			
			/*if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
				areaEditOptions[fn_id]={
						id: ea_id // textarea id
						,syntax: "r" // syntax to be uses for highgliting
						,start_highlight: true // to display with highlight mode on start-up
						,toolbar:toolbar1
						,allow_toggle: false
						,allow_resize: "both"
						,plugins:plugins1
						,font_size:8
						,font_family: "verdana, monospace"
						,is_editable:(plugins1=='reditorlite')?false:true
					    ,save_callback:"saveRFunction"
				};			
				editAreaLoader.init(areaEditOptions[fn_id]);
			}else if(CODE_EDITOR==CODE_ACE_EDITOR){*/
					var parnt=$j("#"+ea_id).parent(); $j("#"+ea_id).remove();
					var ttl=fn_name;
					
					var toolbar_1="";
					var max_1adjust=isEditable?"adjust_max":"";
					$j(parnt).append(toolbar_1+"<div class='icon_fullscreen "+max_1adjust+"'><a href='#' fid='"+ea_id+"' screentitle='"+ttl+"' onclick='rf_acefull(this); return false;'><img src='images/expand_fullscreen.png'></a></div><div class='ace_editor' style='display:none' id='"+ea_id+"'></div>");
		    		
					var fieldval1=scriptContent==null?"":scriptContent; // shows content of a private function 
					var tm = function(ea_id,fieldval1){
						$j("#"+ea_id).show();						 
						ACE_EDITORS[ea_id]= ace.edit(ea_id);
						ACE_EDITORS[ea_id].getSession().setValue(fieldval1);
						var is_readonly=!isEditable;
						setACE_Default(ACE_EDITORS[ea_id],is_readonly);						
					}
					setTimeout(tm,500,ea_id,fieldval1);
			//}
			
			editor_initiated=true;			
			
			if(rf_editorTab.length==1){
				  rf_highLightFunc(fn_id);
			}
			
			if(plugins1=='reditorlite'){
				$j("#fn_btn_save_"+fn_id).hide();
			}else{
				$j("#fn_btn_save_"+fn_id).show();
			}
		}
	}
	
	if(data!=null){
		respBack(data);
		return;
	}
	
	var readonly=true;
	if(flag!=null && flag=='edit'){
			var readonly=false;
	}
	
	if (fn_id <= 0) {
	//if (typeof fn_id == "string") {
		if ($j("#rf_tabs-" + fn_id).length > 0) {
			processTb = false;
			var index=$j('#rf_tabs a[href="#rf_tabs-'+  fn_id+'"]').parent().index()
			rf_editorTab.tabs('select', index);
			RFunctionMgmt.getRFunctionPriv(fn_id,fn_name,readonly, ALUSER_COOKIE, function(data){
				respBackPrivate(data,true);
			});
		} else {
			progress_message("Please wait...");
			RFunctionMgmt.getRFunctionPriv(fn_id,fn_name,readonly, ALUSER_COOKIE, respBackPrivate);
		}
	} else {
		if ($j("#rf_tabs-" + fn_id).length > 0) {
			processTb = false;
			var index=$j('#rf_tabs a[href="#rf_tabs-'+  fn_id+'"]').parent().index()
			rf_editorTab.tabs('select', index);
			RFunctionMgmt.getRFunction(parseInt(fn_id),readonly,
					ALSID_COOKIE,
					ALUSER_COOKIE, function(data){
				respBack(data,true);
			});		
		}else {
			progress_message("Please wait...");
			RFunctionMgmt.getRFunction(parseInt(fn_id),readonly, 
					ALSID_COOKIE,
					ALUSER_COOKIE, respBack);
		}
	}
}

function fn_deleteFunction(thisobj){
	if (confirm("Are you sure you wish to delete this function ?")) {
	
	  var fn_id=$j(thisobj).attr("function_id");
	  progress_message("Please wait while deleting function...");
	  RFunctionMgmt.deleteFunction(parseInt(fn_id),function(success){
	  	progress_message();
	  	if (typeof success == 'boolean' && success) {			
			message_status("Function has been deleted");
			window.location.reload();
			/*var fn_id = rf_getActivePanelID();
			var index = $j("li", rf_editorTab).index($j(this).parent());
			rf_editorTab.tabs("remove", index);
			
			
			var node_s = $j(treeSelector + ' li[taskitem="yes"][function_id="' + fn_id + '"]');
			$j(node_s).find(".rf_tabopen").removeClass("rf_tabopen");
			$j(treeSelector + ' ul#ul_trash_Trash').append(node_s);*/
		}
	  });
	}
}

function fn_deleteFunctionPrivate(thisobj,parentDir){
	if (confirm("Are you sure you wish to delete this function ?")) {
		  var fn_name=$j(thisobj).attr("function_name");
		  progress_message("Please wait while deleting function...");
		  
		  var respback = function(data) {
			  
			  if(data==1) {
				  message_status("Function deleted");
				  window.location.reload();
			  } else {
				  message_status("Can not delete function. Please check directory permission");
			  }
		  }
		  
		  RFunctionMgmt.deleteFunctionPrivate(fn_name, parentDir, ALUSER_COOKIE, respback);
	}
}

function fn_deleteFunctionTeam(thisobj,teamnfolder){
	if (confirm("Are you sure you wish to delete this function ?")) {
		  var fn_name=$j(thisobj).attr("function_name");
		  progress_message("Please wait while deleting function...");
		  
		  var respback = function(data) {
			  
			  if(data==1) {
				  message_status("Function deleted");
				  window.location.reload();
			  } else {
				  message_status("Can not delete function. Please check directory permission");
			  }
		  }
		  
		  RFunctionMgmt.deleteFunctionTeam(fn_name, teamnfolder, respback);
	}
}


function fn_unlockFunction(){
	var fn_id=rf_getActivePanelID();
	if (confirm("Are you sure you wish to unlock this function?")) {
	
		RFunctionMgmt.unLockFunction(parseInt(fn_id), function(data){
			progress_message();
			if (data != null) {
				message_status("Function unlocked successfully")
			};
			var ea_id = "rf_editor_area_" + fn_id;
			rf_editorExecCommand(ea_id, 'reditor_locked', false);
			$j("#rf_lockedBy_" + fn_id).html("");
			$j("#rf_lockedBy_" + fn_id).removeClass("showOn");
		});
	}				
}

function fn_lockFunction(){
	var fn_id=rf_getActivePanelID();
	$j( "#dialog_lockFunc" ).dialog({
			resizable: false,			 
			width:400,
			modal: true,		
			dialogClass: 'rf_dialog',
			buttons: {
				Cancel: function() {
					$j( this ).dialog( "close" );
				}, 	 				
				"Lock": function() {
					$j( this ).dialog( "close" );
					progress_message("Please wait...");			
					RFunctionMgmt.lockFunction(parseInt(fn_id),parseInt($j("#dialog_lockFunc_opt").val()),function(data){						
					    progress_message();
						if(data!=null){														
							message_status("Function locked successfully")};
							var ea_id="rf_editor_area_"+fn_id;
							rf_editorExecCommand(ea_id,'reditor_locked',true);
							$j("#rf_lockedBy_"+fn_id).html("Locked by you");
							$j("#rf_lockedBy_"+fn_id).addClass("showOn");						
						}
					);
				}
			}
		});
}

function updateItemPrivilgeNotification(themes, tags,itemid, respBack) {	
	RFunctionMgmt.getItemPrivilegeNotifications(themes,tags,respBack);
	rf_flagEdited(itemid);
}

function fn_getWiki(fn_name11,panel_id,exeCallBk){
	/*var respBack = function(rdata){
		progress_message();
		if (rdata != null) {
			$j("#"+panel_id+" div.wiki_panel").html('<div class="function_wiki"><div class="wiki_tb"><input  function_name="'+fn_name11+'" panel_id="'+panel_id+'" type="button" value="Edit This Wiki" onclick="wiki_inlineEditorObj(this)"></div>'+rdata+'</div>');
			
			if($j("#"+panel_id+" div.wiki_panel .function_wiki").text().trim().indexOf("There is currently no text in this page, you can search for this page title in other pages or edit this page")>=0){
			//no page found for this function.
				if($j("#"+panel_id+" div.wiki_panel .function_wiki a.external.text").html()=='edit this page'){
					var link=$j("#"+panel_id+" div.wiki_panel .function_wiki a.external.text").attr("href");
					$j("#"+panel_id+" div.wiki_panel").html('<div class="function_wiki"><center><div class="create_wiki">No documentation found for this function <a href="#">Add Wiki</a></div></center></div>');
					$j("#"+panel_id+" div.wiki_panel .function_wiki .create_wiki a").bind('click',function(){
	 					var wind=window.open( link, "wiki", "width=900,height=800;location=0,status=0,scrollbars=1");
						wind.focus(); 
						return false;						
					});
				} 
				
			}else{					 
				$j("#"+panel_id+" div.wiki_panel a[href^='http']").attr('target','_blank');			
				$j("#"+panel_id+" div.wiki_panel a[href^='http']").bind('click',function(){
	 					var wind=window.open( $j(this).attr('href'), "foo", "width=900,height=800;location=0,status=0,scrollbars=1");
						wind.focus(); 
						return false;
				});	
				
				//replacing images...				
				$j("#"+panel_id+" div.wiki_panel img[src^='/']").each(function(){
					$j(this).attr("src","https://wiki.4ecap.com"+$j(this).attr("src"));
				});
			}
			
		}else{
			$j("#"+panel_id+" div.wiki_panel").append('<div class="function_wiki"><h3>No Information found on Wiki about this function</h3></div>');
		}
		if(exeCallBk!=null){
			exeCallBk.call(this);
		}
	}
	progress_message("please wait....");
	
	RFunctionMgmt.getFunctionWiki(fn_name11,respBack);*/
	
	
	var respBack = function(rdata){
		progress_message();
		if (rdata != null) {
			$j("#"+panel_id+" div.wiki_panel").html('<div class="function_wiki"><div class="wiki_tb"><input  function_name="'+fn_name11+'" panel_id="'+panel_id+'" type="button" value="Edit This Wiki" onclick="wiki_inlineEditorObj(this)"></div>'+rdata+'</div>');
			
			if($j("#"+panel_id+" div.wiki_panel .function_wiki").text().trim().indexOf("There is currently no text in this page, you can search for this page title in other pages or edit this page")>=0){
			//no page found for this function.
				if($j("#"+panel_id+" div.wiki_panel .function_wiki a.external.text").html()=='edit this page'){
					var link=$j("#"+panel_id+" div.wiki_panel .function_wiki a.external.text").attr("href");
					$j("#"+panel_id+" div.wiki_panel").html('<div class="function_wiki"><center><div class="create_wiki">No documentation found for this function <a href="#">Add Wiki</a></div></center></div>');
					$j("#"+panel_id+" div.wiki_panel .function_wiki .create_wiki a").bind('click',function(){
	 					var wind=window.open( link, "wiki", "width=900,height=800;location=0,status=0,scrollbars=1");
						wind.focus(); 
						return false;						
					});
				} 
				
			}else{					 
				$j("#"+panel_id+" div.wiki_panel a[href^='http']").attr('target','_blank');			
				$j("#"+panel_id+" div.wiki_panel a[href^='http']").bind('click',function(){
	 					var wind=window.open( $j(this).attr('href'), "foo", "width=900,height=800;location=0,status=0,scrollbars=1");
						wind.focus(); 
						return false;
				});	
				
				//replacing images...				
				$j("#"+panel_id+" div.wiki_panel img[src^='/']").each(function(){
					$j(this).attr("src","https://wiki.4ecap.com"+$j(this).attr("src"));
				});
			}
			
		}else{
			$j("#"+panel_id+" div.wiki_panel").append('<div class="function_wiki"><h3>No Information found on Wiki about this function</h3></div>');
		}
		if(exeCallBk!=null){
			exeCallBk.call(this);
		}
	}
	progress_message("please wait....");
	
	RFunctionMgmt.getFunctionInfoFromWiki(fn_name11,
		ALSID_COOKIE,
		ALUSER_COOKIE,respBack);
		
}

function wiki_help(lnk_p){

    var lnk="R_Functions_Editor";
	if(lnk_p!=null) lnk=lnk_p;
	var func = function(){
		$j("#wikiDialog").dialog({
			resizable: false,
			width: 1200,
			modal: true,
			title:"Help: R Function Editor",
			dialogClass: 'rf_dialog rf_wikidialog'
		});
	}
	$j("#wikiDialogBdy").html("<div class='wiki_panel'></div>");
	fn_getWiki(lnk,"wikiDialogBdy",func);
}

function wiki_inlineEditorObj(thisobj){
	var func_name=$j(thisobj).attr("function_name")
	var panel_id=$j(thisobj).attr("panel_id");
	wiki_inlineEditor(func_name,panel_id);
}
function wiki_inlineEditor(function_name,panel_id){
	var respBack = function(rdata){
		var is_wiki_empty = false;
		if(rdata.indexOf("There is currently no text in this page")>=0){
			is_wiki_empty = true;
		}
		
		var respBack2 = function(data){
			if (is_wiki_empty) {
				var cat = data[0].toUpperCase() + data.slice(1);
				var function_name_title = function_name[0].toUpperCase() + function_name.slice(1);
				var url_wiki_empty="https://wiki.alphien.com/api/4Eapi.php?action=sendpage&text=[[Category:"+cat+"]]&title="+function_name_title;
				var i = document.createElement("img");
				i.src = url_wiki_empty; // just execute url, img is dummy.
			}
			var url_wiki_exist="https://wiki.alphien.com/alphienwiki/index.php?title="+function_name+"&action=edit";
			$j("#"+panel_id+" div.wiki_panel").html('<div class="function_wiki_editor"><div class="wiki_tb"><input function_name="'+function_name+'" panel_id="'+panel_id+'" type="button" value="Finished Editing" onclick="fn_closeWikiEditor(this)"></div></div>');
			$j("#"+panel_id+" div.wiki_panel").append('<div class="wiki_editor"><iframe width="100%" height="94%" src="'+url_wiki_exist+'" scrolling="yes"></iframe></div>');	
		};
	
		var fn_id=rf_getActivePanelID();
		RFunctionMgmt.getFolderThemeByRFunctionId(parseInt(fn_id),respBack2);
	}

	RFunctionMgmt.getFunctionWiki(function_name,respBack);
}

function fn_closeWikiEditor(thisobj){
	var func_name=$j(thisobj).attr("function_name")
	var panel_id=$j(thisobj).attr("panel_id");
	fn_getWiki(func_name,panel_id);
}

function fn_getRevision(fn_name11,panel_id,clbdata) {
	var respBack = function(rdata){
		progress_message();
		if (rdata != null) {
		    $j("#"+panel_id+" div.rev_panel").html("");
			$j("#"+panel_id+" div.rev_panel").append('<ul class="revisionList" style="padding:5px;"></ul>');
			for (rev=0;rev<rdata.length;rev++) {
				li = "<li>" + rdata[rev].author + " &nbsp;&nbsp;&nbsp;<span class='date'>(" + rdata[rev].date + ")</span>";
				li+="<div class='message'>"+rdata[rev].message+"</div>";
				li += "<div style='float:right;vertical-align:top;margin-top:-1' class='svn_link_btn'>";				
				li += "<a href='#' onclick='fn_showRev(this,false); return false;' function_name='" + rdata[rev].function_name + "' path='" + rdata[rev].path + "' compare='yes' revision='" + rdata[rev].revision + "' >Diff</a>";
				li += "<a href='#' onclick='fn_showRev(this,true); return false;' function_name='" + rdata[rev].function_name+ "'  path='" + rdata[rev].path + "'  revision='" + rdata[rev].revision + "' code='yes'  >Show Code</a>";
				li += "</div><div class='fn_inline_editor' style='display:none'></div>";
				
				$j("#"+panel_id+" div.rev_panel ul.revisionList").append(li);
			}
		}
	}
	if(clbdata!=null){
	   respBack(clbdata);
	}else{
	   
       progress_message("please wait....");
       RFunctionMgmt.getSVNLogs(fn_name11,respBack);
	}
}

function fn_showRev(ancobj,isCode) {
	var fn=$j(ancobj).attr("function_name");
	var rev=$j(ancobj).attr("revision");
	var path=$j(ancobj).attr("path");
	
	var area= $j(ancobj).parent().parent().find("div.fn_inline_editor");
	if ($j(ancobj).text() == 'Hide Code') {
	  	$j(area).html("");
		$j(ancobj).html("Show Code");
		$j(ancobj).removeClass("lnkselected");
	  	$j(area).hide();
		return ;
	}
	
	if ($j(ancobj).text() == 'Hide Diff') {
	  	$j(area).html("");
		$j(ancobj).html("Diff");
		$j(ancobj).removeClass("lnkselected");
	  	$j(area).hide();
		return ;
	}
	
	var respBack=function(data){
		progress_message();
		if(data!=null){
			$j(ancobj).html(isCode?"Hide Code":"Hide Diff");
			$j(ancobj).addClass("lnkselected");			
			 if(isCode){
			 	$j(ancobj).parent().find("a[compare='yes']").html("Diff");
				$j(ancobj).parent().find("a[compare='yes']").removeClass("lnkselected");			 	
			 }else{
			 	$j(ancobj).parent().find("a[code='yes']").html("Show Code");			 	
				$j(ancobj).parent().find("a[code='yes']").removeClass("lnkselected");
			 }
			var areaid='rev_editor_'+fn+'_'+rev;
			var html="<textarea id='"+areaid+"' readonly='readonly' style='width:100%;height:430px;font-size:1.1em;'><textarea>";
			$j(area).show();
			$j(area).html(html);
			$j(area).find("textarea#"+areaid).val(data);
			//disabled because it shows junk characters on it.			
			if (isCode) {
				editAreaLoader.init({
					id: areaid // textarea id
					,
					syntax: isCode ? "r" : "rdiff" // syntax to be uses for highgliting
					,
					start_highlight: true // to display with highlight mode on start-up
					,
					toolbar: "|",
					allow_toggle: false,
					font_size:8,
					font_family: "verdana, monospace",
					allow_resize: "both",
					plugins: "reditorlite",
					is_editable:false
				
				});
			}
			editAreaLoader.setValue(areaid,data);
		}
	}
	progress_message("please wait...");
	RFunctionMgmt.getScriptRev(fn,rev,isCode,path,respBack);
}

var rf_editorTab=null;
$j(function() {
		rf_editorTab = $j( "#rf_tabs").tabs({
			tabTemplate: "<li><a href='#{href}'>#{label}</a> <span class='ui-icon ui-icon-close'>Remove Tab</span></li>",
			add: function( event, ui ) {
				$j( ui.panel ).append(currentTabCotent);
				rf_editorTab.tabs( "select", ui.index);
			},
			select: function(event, ui) { 
			   var func_id=ui.panel.id;
			   if(func_id!=null) func_id=func_id.replace("rf_tabs-","");
			   setTimeout(rf_highLightFunc,200);			   
			}
		});		
		
		
		// close icon: removing the tab on click
		// note: closable tabs gonna be an option in the future - see http://dev.jqueryui.com/ticket/3924
		$j( "#rf_tabs span.ui-icon-close" ).live( "click", function() {
			var index = $j( "li", rf_editorTab ).index( $j( this ).parent() );
			
			
			var activepanel=rf_editorTab.data().tabs.panels[index];
			var func_id=$j(activepanel).attr("id")
			
			var local_id = parseInt(func_id);
			
			
			if(func_id.indexOf("rf_ptabs")>=0){
				rf_editorTab.tabs( "remove", index );
				return;

			}
			
			func_id=func_id.replace("rf_tabs-","");	
			
			var modified=false;
			/*if(CODE_EDITOR==CODE_ACE_EDITOR && $j( this ).parent().hasClass("ace_edited")){
				modified=true;  
			}else if(CODE_EDITOR==CODE_EDITOR_DEFAULT && rf_EditorTyped[func_id]!=null  && rf_EditorTyped[func_id]){
				modified=true;
			}*/
			modified=true;
			if(modified){
				if (local_id > 0) {
					if(confirm("Changes will be lost! Are you sure you want to close ?")){
						
						rf_editorTab.tabs( "remove", index );
						RFunctionMgmt.unLockFunctionFromCache(parseInt(func_id),function(data){});
						rf_highLightFunc(); 
						rf_EditorTyped[func_id]=null;
						areaEditOptions[func_id]=null;
						
						if(typeof ACE_EDITORS["rf_editor_area_"+func_id]=='object' ){
							delete ACE_EDITORS["rf_editor_area_"+func_id];
						}					
					}
				} else {
					rf_editorTab.tabs( "remove", index );
					rf_highLightFunc(); 
					areaEditOptions[func_id]=null;
					if(typeof ACE_EDITORS["rf_editor_area_"+func_id]=='object' ){
						delete ACE_EDITORS["rf_editor_area_"+func_id];
					}
				}
				
			}else{
				rf_editorTab.tabs( "remove", index );
					
				RFunctionMgmt.unLockFunctionFromCache(parseInt(func_id),function(data){});
				rf_highLightFunc(); 
				areaEditOptions[func_id]=null;
				if(typeof ACE_EDITORS["rf_editor_area_"+func_id]=='object' ){
					delete ACE_EDITORS["rf_editor_area_"+func_id];
				}					
			}
		});
});

function saveRFunction(){
	infoSVNMessage();
	var fn_id=rf_getActivePanelID();
	var script=null;
	//if(CODE_EDITOR==CODE_ACE_EDITOR){
		script=ACE_EDITORS["rf_editor_area_"+fn_id].getSession().getValue();		   
	/*}else if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
		script=editAreaLoader.getValue("rf_editor_area_"+fn_id);
	}*/

	$j("#dialog_commit_msg").val();
	
	var tag_panel="#rf_tabs-"+fn_id+" .tags_panel";					
	var tagids=new Array();			 
	$j(tag_panel+" .task_tag_owner li[tag_id]").each(function(idx,el){	tagids[tagids.length]=$j(el).attr("tag_id");});			
	var followids=[];				 
	$j(tag_panel+" .task_tag_follower li[tag_id]").each(function(idx,el){		followids[followids.length]=$j(el).attr("tag_id");	});
	
	if(tagids.length<1){		
		
		$j("#rf_stabs_"+fn_id).tabs( "select" , 2);		
		alert("Failed: Minimum 1 tag required. Please select tag from tag tab");
		return ;
	}else{	
	}
	
	$j( "#dialog_commit" ).dialog({
		resizable: false,			 
		width:700,
		modal: true,		
		dialogClass: 'comment_dialog',		
		buttons: {
			"Cancel": function() {
			$j( this ).dialog( "close" );
			},	 				
			"Save": function() {
				progress_message("Please wait...");					
				$j( this ).dialog( "close" );
						
				RFunctionMgmt.modifyRFunction(parseInt(fn_id),script,$j("#dialog_commit_msg").val(),tagids,followids,function(data){						
				    progress_message();
					if(data!=null){
						fr_treeListGen(data);
						rf_highLightFunc(fn_id);
						if(data.function_id!=null){
							$j("div#rf_tabs > ul a[href='#rf_tabs-"+data.function_id+"']").parent().removeClass("ace_edited");
						}
						message_status("Function saved successfully")};
						$j("#dialog_commit_msg").val("");
						rf_EditorTyped[rf_getActivePanelID()]=false;
						fn_getRevision(fname,rf_getActivePanelID());						
					}
				);
			}
		},
		open: function(event, ui) {
				console.dir(ui);				 
				$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
				$j("#dialog_commit_msg").unbind("keyup");
				$j("#dialog_commit_msg").bind("keyup",function(){
				    console.log("key pressed.");
					if($j.trim($j("#dialog_commit_msg").val()).length>5){
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").removeAttr("disabled");
					}else{
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
						}
					});	
		}
	});
	$j('#dialog_commit_msg').focus();
}

function downloadFunction(text, name, type) {
    var a = document.createElement("a");
    var file = new Blob([text], {type: type});
    a.href = URL.createObjectURL(file);
    a.download = name;
    a.click();
}

function saveRFunctionTeam(fname,teamnfolder){
	infoSVNMessage();
	var fn_id=rf_getActivePanelID();
	var script=null;
	console.log("fn_id : " + fn_id);
	//if(CODE_EDITOR==CODE_ACE_EDITOR){
		script=ACE_EDITORS["rf_editor_area_"+fn_id].getSession().getValue();		   
	/*}else if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
		script=editAreaLoader.getValue("rf_editor_area_"+fn_id);
	}*/

	$j("#dialog_commit_msg").val();

	$j( "#dialog_commit" ).dialog({
		resizable: false,			 
		width:700,
		modal: true,		
		dialogClass: 'comment_dialog',		
		buttons: {
			"Cancel": function() {
			$j( this ).dialog( "close" );
			},	 				
			"Save": function() {
				progress_message("Please wait...");					
				$j( this ).dialog( "close" );
						
				RFunctionMgmt.saveTeamScript(fname,script,teamnfolder,$j("#dialog_commit_msg").val(),function(data){
				    progress_message(null);
					message_status("Function saved successfully");
					$j("#dialog_commit_msg").val("");
					rf_EditorTyped[rf_getActivePanelID()]=false;
					}
				);
			}
		},
		open: function(event, ui) {
				console.dir(ui);				 
				$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
				$j("#dialog_commit_msg").unbind("keyup");
				$j("#dialog_commit_msg").bind("keyup",function(){
				    console.log("key pressed.");
					if($j.trim($j("#dialog_commit_msg").val()).length>5){
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").removeAttr("disabled");
					}else{
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
						}
					});	
		}
	});
	$j('#dialog_commit_msg').focus();

}

function saveRFunctionPriv(fname,parentDir){
	infoSVNMessage();
	var fn_id=rf_getActivePanelID();
	var script=null;
	
	//if(CODE_EDITOR==CODE_ACE_EDITOR){
		script=ACE_EDITORS["rf_editor_area_"+fn_id].getSession().getValue();		   
	/*}else if(CODE_EDITOR==CODE_EDITOR_DEFAULT){
		script=editAreaLoader.getValue("rf_editor_area_"+fn_id);
	}*/

	$j("#dialog_commit_msg").val();

	$j( "#dialog_commit" ).dialog({
		resizable: false,			 
		width:700,
		modal: true,		
		dialogClass: 'comment_dialog',		
		buttons: {
			"Cancel": function() {
			$j( this ).dialog( "close" );
			},	 				
			"Save": function() {
				progress_message("Please wait...");					
				$j( this ).dialog( "close" );
						
				RFunctionMgmt.savePrivateScript(ALUSER_COOKIE,fname,script,parentDir,$j("#dialog_commit_msg").val(),function(data){						
				    progress_message(null);
					message_status("Function saved successfully");
					$j("#dialog_commit_msg").val("");
					rf_EditorTyped[rf_getActivePanelID()]=false;						
					}
				);
			}
		},
		open: function(event, ui) {
				console.dir(ui);				 
				$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
				$j("#dialog_commit_msg").unbind("keyup");
				$j("#dialog_commit_msg").bind("keyup",function(){
				    console.log("key pressed.");
					if($j.trim($j("#dialog_commit_msg").val()).length>5){
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").removeAttr("disabled");
					}else{
						$j("#dialog_commit ~.ui-dialog-buttonpane .ui-button:last-child").attr("disabled","disabled");
						}
					});	
		}
	});
	$j('#dialog_commit_msg').focus();

}
 
function rf_getActivePanelID(){
	var activepanel=rf_editorTab.data().tabs.panels[rf_editorTab.tabs("option","selected")];
 
	var func_id=$j(activepanel).attr("id")
	if(func_id!=null){
		func_id=func_id.replace("rf_tabs-","");
		return func_id; 
	}else{
		return null;
	}
}
var rf_EditorTyped=new Array();
function rf_typeDetected(d){
	rf_EditorTyped[rf_getActivePanelID()]=true;
}

function rf_highLightFunc(func_id){	
	$j(".rf_tabopen").removeClass("rf_tabopen");
	$j(".rf_tabactive").removeClass("rf_tabactive");
	
	//in case drag and drop file, the drop area will disappear in hidden tab.
	
	$j("#rf_tabs div[id^='rf_tabs-']").each(function(idx,elem){
		var this_id=$j(elem).attr("id");
		var fid=this_id.replace("rf_tabs-","");
		
		$j("#function_id_" + fid).addClass("rf_tabopen");		
		var readonly=$j("#rf_stabs_"+fid).attr("readonly");
		
		if(readonly=='true'){
			$j("#function_id_" + fid+" input.fn_itembtn[value='Open']").addClass("hidebtn");
			$j("#function_id_" + fid+" input.fn_itembtn[value='Edit']").removeClass("hidebtn");
		}else{
			$j("#function_id_" + fid+" input.fn_itembtn[value='Open']").addClass("hidebtn");
			$j("#function_id_" + fid+" input.fn_itembtn[value='Edit']").addClass("hidebtn");
			$j("a[href='#rf_tabs-"+fid+"']").addClass("rf_editabletab");			
		}

		if (!$j(elem).hasClass("ui-tabs-hide")) {
			func_id=fid;
			$j("#function_id_" + func_id).addClass("rf_tabactive");			
			if (frames["frame_rf_editor_area_" + func_id] != null) {
				$j(".qq-upload-drop-area", frames["frame_rf_editor_area_" + func_id].document).hide();
			}
					
			var group_id=$j(treeSelector + ' li[function_id="' + func_id + '"]').parent().parent('li[folderitem="yes"]').attr("group_uid");
			$j(treeSelector + ' li.expandable[groupname="'+group_id+'"]').children('div.hitarea').trigger('click');				
			$j(treeSelector + ' li[function_id="' + func_id + '"]').parent().parent('li.expandable[folderitem="yes"]').children('div.hitarea').trigger('click');
			setTimeout(function(){		
				$j("#rf_treeMenu").scrollTo("#function_id_" + func_id,700, {offset: {top:-410}} );
			},300);
		}	
				
	});
}

function createRFunction(s_folder_id,func_type,folder_name) {
	
	var fword="function";
	if(func_type==FUNCTION_TYPE_CLASS) fword="class";
	if(func_type==FUNCTION_TYPE_METHOD) fword="method";
	var name=prompt("Enter "+fword+" name");
	if (name != null && name!='') {
		 
		var respBack=function(data){
			progress_message();
			if(data!=null){
				fr_treeListGen(data);
				fn_edit(0,data.func_data);
			}
			window.location.reload();
			var test = $("[function_name=3459]");
			
			for(a=0; a<test.length; a++) {
				console.log(test[a]);
			}
			
		}
		progress_message("Please wait...");
		RFunctionMgmt.createRFunction(s_folder_id,name,"",func_type,folder_name, 
			ALSID_COOKIE, 
			ALUSER_COOKIE,respBack);
	}
	
}


function createRFunctionPrivate(parentdir,func_type) {
	
	var fword="function";
	if(func_type==FUNCTION_TYPE_CLASS) fword="class";
	if(func_type==FUNCTION_TYPE_METHOD) fword="method";
	var name=prompt("Enter "+fword+" name").replace(/ /g,"_");
	if (name != null && name!='') {
		 
		var respBack=function(data){
			if(!data.includes("Duplicate")) {
				window.location.reload();
			}
			
			message_status(data);
		}
		progress_message("Please wait...");
		RFunctionMgmt.createRFunctionPrivate(parentdir,name,"",func_type,ALUSER_COOKIE,respBack);
	}
	
}

function createRFunctionTeam(teamnfolder,func_type) {
	
	var fword="function";
	if(func_type==FUNCTION_TYPE_CLASS) fword="class";
	if(func_type==FUNCTION_TYPE_METHOD) fword="method";
	var name=prompt("Enter "+fword+" name").replace(/ /g,"_");
	if (name != null && name!='') {
		 
		var respBack=function(data){
			
			if(!data.includes("Duplicate")) {
				window.location.reload();
			}
			
			message_status(data);
		}
		progress_message("Please wait...");
		RFunctionMgmt.createRFunctionTeam(teamnfolder,name,func_type,ALUSER_COOKIE,respBack);
	}
	
}



/**
 * This function is used to show progress message while 
 * communicating to the server
 * @param {Object} msg
 */
function progress_message(msg,doc){
	 if (msg != null) {
	 	if(doc==null){
			doc=document;
		}
	 	var img     = doc.createElement('img');
      	img.setAttribute('src', 'images/loading.gif');
		img.style.width="auto";
		img.style.height="auto";
		var spn=doc.createElement('span');
		spn.appendChild(doc.createTextNode(msg));
		spn.style.verticalAlign="middle";		
		spn.style.paddingLeft="15px";
		$("progressMessage").innerHTML="";
	 	$("progressMessage").appendChild(img);
		$("progressMessage").appendChild(spn);		
	 	$("progressMessage").show();
		
		$("statusMessage").innerHTML="";
		$("statusMessage").hide();
	 }else{	 	
	 	$("progressMessage").innerHTML = "";
	 	$("progressMessage").hide();
	 }
}

/**
 * To display status message on screen after the server responded for client request 
 * @param {Object} msg
 */
function message_status(msg){
	
	 if (msg != null) {
 		progress_message(null);
		var span=document.createElement('div');
		$j(span).append(msg);
		span.style.verticalAlign="middle";
		span.style.padding="2px 5px 2px 2px";
		$j(span).css("float","left");
		span.style.display="inline";
 		$("statusMessage").innerHTML = "";
		$("statusMessage").appendChild(span);
		var closeBtn=document.createElement('a');
		var img=document.createElement("img");
		img.src="images/closebtn.png";
		img.style.border="0px";
		closeBtn.href="#";
		closeBtn.appendChild(img);
		closeBtn.onclick=function(){
			message_status(null);
			return false;
		}
		var cpan=document.createElement('div');		
		cpan.style.display="inline";
		cpan.appendChild(closeBtn);
		$("statusMessage").appendChild(cpan);
		$("statusMessage").style.verticalAlign="middle";
	 	$("statusMessage").show();
	 }else{	 	
	 
	 	$("statusMessage").innerHTML = "";
	 	$("statusMessage").hide();
	 }
}

DWREngine.setErrorHandler(errorHandleDWR);

function errorHandleDWR(message){
	message_status(message);
}

function rf_showTag4Function(func_name,panel_id) {
	 
	var func_id=rf_getActivePanelID();
	respBack = function(data){
		progress_message();
		if (data.tags != null) {			
			var htm="<ul class='function_tag_dialog_ul'>"
			 
			for(ic=0;ic<data.tags.length;ic++){
				var styl=""; var checked=""; tg_class="";
				tg=$j.trim(data.tags[ic].tagname)
								
				if (rf_TagColors[tg] != null && rf_TagColors[tg] != '') {
					styl= "style='background-color:" + rf_TagColors[tg] + "'";
				}
				  
				if($j.inArray(data.tags[ic].id,data.tagids)>=0){
					checked+=" checked ";
				}
				if(tg.substring(0, 4)=="usr-"){
					tg_class="task_tag_dialog_usr";
					checked+=" disabled='disabled' ";
				}
				
				htm+="<li class='function_tag function_tag_dialog "+tg_class+"' " +styl+"><input function_id='"+func_id+"' onclick='rf_updateTaskTags(this)' type='checkbox' "+checked+" value='"+data.tags[ic].id+"'>"+tg+"</li>"
			}
			htm+="</ul>";
			$j("#"+panel_id+" .tags_panel").html(htm);
		}
		rf_followThisFun(null,null,data,func_id,panel_id);
	}
    progress_message("Please wait loading tags.....");
  	RFunctionMgmt.getFunctionTags(func_id,respBack);
}

function rf_followThisFun(follow,thisobj,  data,func_id,panel_id){
	 
	var respBack=function(data,func_id,panel_id){
		var socialbtn="<input type='button' value='Follow This Function' onclick='rf_followThisFun(true,this)' panel_id='"+panel_id+"'  function_id='"+func_id+"' user='"+data.authorizedUser+"'>";
		var htm="";
		if (data.followers != null) {			
		
			for(ic=0;ic<data.followers .length;ic++){
			    htm+="<li>"+data.followers[ic]+"</li>";
				if(data.authorizedUser!=null && data.followers[ic]!=null&& data.authorizedUser.toLowerCase()==data.followers[ic].toLowerCase()){
					var socialbtn="<input type='button' value='Unfollow This Function' onclick='rf_followThisFun(false,this)' panel_id='"+panel_id+"'  function_id='"+func_id+"' user='"+data.authorizedUser+"'>";
				}
			}		
			htm="<ul>"+htm+"</ul>";			 
		}
		socialbtn=(data.authorizedUser!=null)?"<div class='rf_socialbtn'>"+socialbtn+"</div>":"";					
		$j("#"+panel_id+" .following_panel").html(htm+socialbtn);
	}
	
	if (data != null) {		
		respBack(data,func_id,panel_id);
		return;
	}else {			
		var func_id= $j(thisobj).attr("function_id");
		var usr = $j(thisobj).attr("user");
		var panel_id = $j(thisobj).attr("panel_id");			
		progress_message("Please wait...");
		RFunctionMgmt.followFunction(follow, func_id, usr, function(data){progress_message();respBack(data,func_id,panel_id);});
	}
}

function rf_updateTaskTags(thisobj){
	 var fn_id=$j(thisobj).attr("function_id");
	 var tag_id=$j(thisobj).val();
	 var checked=thisobj.checked;
	 var repBack=function(data){
	 	progress_message();
		fr_treeListGen(data);	
	 }
	 progress_message("Please wait..")
	 RFunctionMgmt.updateTags4Function(parseInt(fn_id),parseInt(tag_id),checked,repBack);
}

function rf_findRef(thisobj){
	var fname=$j(thisobj).attr("fname");
	rf_searchWithinREnv(fname,fname);
}

function rf_searchFrURL(word) {
	
	setTimeout(function(){
		$j("#rf_treeMenu").hide();
		$j(".fe-mainMenu").hide();
		$j(".rf_toolBar").hide();
		var embed_into_body=true;
		rf_searchWithinREnv(word,null,embed_into_body);
	},500);
}

var search_ace_editor=null;
function rf_searchWithinREnv(word,ignore,embody) {
	
	if(embody==null) embody=false;
	var respBack=function(data){
		progress_message();
		var ts="#rf_search_dialogBdy ul.search_tree_ul";
		
		var htm="<div class='search_tbl'>" ;
		htm+="<div class='search_tree'><ul class='search_tree_ul filetree'></ul></div>";
		htm+="<div class='search_reditor'><div class='search_editorttitle'><span class='search_titlespan'></span><a href='#' title='Move to next result position' onclick='rf_searchMoveSelection(\"#rf_search_dialogBdy .search_tree_ul li[pfile][line]\",\".selected\",false);return true;' class='moveup'><img src='images/move_up.png' ></a><a href='#' title='Move to previous result position' onclick='rf_searchMoveSelection(\"#rf_search_dialogBdy .search_tree_ul li[pfile][line]\",\".selected\",true);return false;' class='movedown'><img src='images/move_down.png'></a></div><div id='search_reditortxt' style='width:100%; height:96%;overflow:auto;'></div></div>" ;
		htm+="</div>";	
		$j("#rf_search_dialogBdy").html(htm);
		var lcount=0;
		var fcount=0;
		var manNode=function(ts,title,sd,cls,name_fn){
			$j(ts).append("<li class='"+cls+"'><div class='search_group'>"+title+"</div><ul> </ul> </li>");
			for(f in sd){				 
				 var fname=f;
				 if(name_fn!=null){
					 fname=name_fn.call(this,fname);
				 }
				 if(fname!=null){
					 $j(ts).find("."+cls+" > ul").append("<li file='"+f+"' ><span class='file'>"+fname+"</span><ul></ul></li>");
					 var filenode=$j(ts).find("."+cls+" > ul li[file='"+f+"']");
					 fcount++;
					 for(iab=0;iab<sd[f].length;iab++){
						 var resu=sd[f][iab];
						 var snip=resu.split("|")[1].length>45?resu.split("|")[1].substring(0,45)+"...":resu.split("|")[1];
						 var line=(resu.split("|")[0]);	
						 snip=$j('<div/>').text(snip).html(); //escaping html
						 
						 filenode.find("ul").append("<li ttl='"+fname+"' pfile='"+f+"' line='"+line+"' >"+line+":<span class='result_snip'>"+snip+"</span></li>");
						 lcount++;
					 }
				 }
			}
		}
		if(data.r!=null){			
			manNode(ts,"R Functions",data.r,"node_r",function(f){ f=f.replace(/\.r/g,'');return (f==ignore && ignore!=null)?null:f; });
		}
		if(data.scd!=null){
			manNode(ts,"Scheduler Scripts",data.scd,"node_scd",function(f){ f=f.replace(/script_/g,'Script ').replace(/\.R/g,'');return (f==ignore && ignore!=null)?null:f; });
		}
		if(lcount==0) {
			message_status(word+' not found in any function/scheduler');
			return ;
		}
		
		$j("#rf_search_dialog").commonDialog({width:"96%", height:$j(window).height()-30,modal:true,hidetitle:false});

		$j("#rf_search_dialogBdy").unbind("keyup");
		$j("#rf_search_dialogBdy").bind("keyup",function(e){
			 
		    if(e.keyCode==38) rf_searchMoveSelection(ts+" li[pfile][line]",".selected",false);
		    if(e.keyCode==40) rf_searchMoveSelection(ts+" li[pfile][line]",".selected",true);
		});	
		
		$j("#rf_search_dialog").commonDialog( "option", "title", word+" found in "+fcount+" files and "+lcount+" times");
		$j(ts).treeview({animated: 100,unique: false});
		
		$j(ts).find("li[pfile][line]").click(function(){
			var pfile=$j(this).attr("pfile");
			var line=$j(this).attr("line");
			var ttl=$j(this).attr("ttl");
			$j(ts).find("li[pfile][line].selected").removeClass("selected");
			$j(ts).find("li[file].fileselected").removeClass("fileselected");
			$j(this).addClass("selected");
			$j(this).parents("li[file]").addClass("fileselected");

			var thisobj=this;
			setTimeout(function(){
				$j(ts).scrollTo(thisobj, {offset: {top:-110}} );
			},200);			
			
			if(search_ace_editor["currentdoc"]!=null && search_ace_editor["currentdoc"]==pfile){
				search_ace_editor.focus();
				search_ace_editor.findAll(word,{ backwards: false,   wrap: false,   caseSensitive: false,    wholeWord: false,   regExp: false},false);
				search_ace_editor.gotoLine(+line);
			}else{
				RFunctionMgmt.getSearchScript(pfile,function(scr_data){
					search_ace_editor.getSession().setValue(scr_data.script);
					if(scr_data.deleted!=null && scr_data.deleted){
						$j(".search_tbl .search_titlespan").html(ttl+" [Deleted]");
						$j(".search_tbl .ace_content").css("background","#F3DFDF"); 
					}else{
						if(scr_data.item_id!=null){
							$j(".search_tbl .search_titlespan").html(ttl+'<input value="Open" onclick="rf_openSearchedItem(this)" item_type='+scr_data.item_type+' item_id='+scr_data.item_id+'  type="button" style="font-size: .65em;padding: 1px 8px;border-radius: 4px;float: right;margin-right: 30;">');
						}
						$j(".search_tbl .ace_content").css("background","");
					}
					search_ace_editor["currentdoc"]=pfile;
					$j(search_ace_editor.container).find(".ace_gutter-layer .ace_found").each(function(idx,el){
						search_ace_editor.getSession().removeGutterDecoration((+$j(el).text()-1),"ace_found");
					});					
					search_ace_editor.getSession().addGutterDecoration(((+line)-1),"ace_found");
					$j(thisobj).siblings().each(function(idx,el){						
						search_ace_editor.getSession().addGutterDecoration((+$j(el).attr("line")-1),"ace_found");
					});
					 				
					search_ace_editor.focus();
					search_ace_editor.findAll(word,{ backwards: false,   wrap: false,   caseSensitive: false,    wholeWord: false,   regExp: false},false);
					search_ace_editor.gotoLine(+line);
					
				});
			}
		});
		
		$j(ts).find("li[file]").click(function(){
			if($j(this).find("li[pfile][line].selected").length==0){
				$j(this).find("li[pfile][line]:first-child").trigger('click');
			}
		});
		
		$j(ts+" span.file").unbind("click");

		if(search_ace_editor!=null) search_ace_editor.destroy();
		
		search_ace_editor=ace.edit("search_reditortxt");		
		search_ace_editor.setTheme("ace/theme/chrome");
		search_ace_editor.getSession().setMode("ace/mode/r");					
		search_ace_editor.setShowPrintMargin(false);
		search_ace_editor.setFontSize(".83em");
		search_ace_editor.session.setFoldStyle("markbegin");
		search_ace_editor.setShowFoldWidgets(true);
		search_ace_editor.setHighlightActiveLine(true);
		search_ace_editor.setReadOnly(true);

		setTimeout(function(){
			$j($j(ts).find("li[pfile][line]")[0]).trigger("click");
		},200);
	    
		if(embody){
			$j(".ui-widget-overlay").hide();
			var dencl=$j("#rf_search_dialog").parent();
			dencl.find(".ui-dialog-titlebar-close").hide();			 
			dencl.css("margin","5px");
			dencl.css("top","0px");
			dencl.css("left","0px");
			dencl.css("height","98%");
			dencl.css("width","99%");
			
		}
	}
	progress_message('Searching........');
	RFunctionMgmt.getSearchR(word,respBack);
}

function rf_openSearchedItem(thisobj) {
	var item_id=$j(thisobj).attr("item_id");
	var item_type=$j(thisobj).attr("item_type");
	if(item_type!=null && item_type=='scheduler'){
		//window.open('scheduler.jsp?scheduler_id='+item_id);
	}
	if(item_type!=null && item_type=='function'){
		//window.open('qlib.jsp?open_functions='+item_id);
		window.open('RFunctionEditor?open_functions='+item_id);
	}
}

function rf_searchMoveSelection(selector, filter, isForward){
	var filter=$j(selector).filter(filter);
	if(isForward){
		var found=false;
		var clicked=false;
		$j(selector).each(function(idx,el){			
			if(found){
				$j(el).trigger('click'); found=false;
				clicked=true;
			}
			if(filter[0]==el)found=true;
		});
		if(!clicked) $j(selector).first().trigger('click');
	}else{

		var prev=null;var clicked=false;
		$j(selector).each(function(idx,el){					 
			if(filter[0]==el && prev!=null){
				$j(prev).trigger('click');  clicked=true;
			}
			prev=el;
		});
		if(!clicked) $j(selector).last().trigger('click');
	}
}

function rf_editorExecCommand(id,cmd, param){
	 if (window.frames["frame_" + id] && window.frames["frame_" + id].editArea) {
	 	var ea = window.frames["frame_" + id].editArea;
	 	if (param != undefined) 
	 		ea.execCommand(cmd, param);
	 	else 
	 		ea.execCommand(cmd);
	 }			
}

function rf_editorSetPath(id,path){
	 if (window.frames["frame_" + id]) {
	 	$j("#toolbar_2 table.statusbar tbody tr td:nth-child(3)")
		$j("#toolbar_2 table.statusbar tbody tr :nth-child(4)",window.frames["frame_" + id].document).after("<td>&nbsp;"+path+"</td>");		 
	 }			
}
 
function rf_acefull(tobj) {
	var fid=$j(tobj).attr("fid");	
	var title=$j(tobj).attr("screentitle");
	var dom = require("ace/lib/dom");
	dom.toggleCssClass(document.body, "fullScreen")
	dom.toggleCssClass(ACE_EDITORS[fid].container, "fullScreen-editor")
	ACE_EDITORS[fid].resize();
	if($j("div#ace_fullscreenclose").length>0){
		$j("div#ace_fullscreenclose").remove();
	}else{
		$j("body").append("<div id='ace_fullscreenclose'  class='ace_fullscreenclose'><span></span><a href='#' fid='"+fid+"' onclick='rf_acefull(this);return false;'><img src='images/collapse_fullscreen.png'></a><small>[Esc]</small></div>");
		if(title!=null && title!=''){
			$j("div#ace_fullscreenclose span").text(title);
		}
	}
	ACE_EDITORS[fid].focus();
}
 
function rf_packinfoShow(pinfo) {	
	var respBack=function(rdata) {
		progress_message();
			var pack_id=rdata.package_id;
			if($j("div#rf_ptabs-"+pack_id).length==0){
				var htm=""; 
				htm+='<div id="rf_pstabs_'+pack_id+'"  class="rf_subtab" >';				
				htm+='	<ul>';
				htm+='			<li><a  href="#rf_pstabs1_'+pack_id+'">Info</a></li>';
				htm+='			<li><a href="#rf_pstabs2_'+pack_id+'">Themes</a></li>';
				htm+='			<li><a href="#rf_pstabs3_'+pack_id+'">Source Loader</a></li>';					
				htm+='		</ul>';
				htm+='		<div id="rf_pstabs1_'+pack_id+'">';				
				htm+='           <div class="package_info chromeScroll">';
				htm+='              <h3 class="rf_subheader">Package Repository</h3><div class="pack_repo"></div>';
				htm+='              <h3 class="rf_subheader">Peer Packages</h3><div class="peers_packtable"></div>';
				htm+='              <h3 class="rf_subheader">Dependencies</h3><div class="required_packages tags_panel"></div>';
				htm+='           </div>';	 		
				htm+='		</div>';
				htm+='		<div id="rf_pstabs2_'+pack_id+'">';
				htm+='        <div class="rf_tagspane chromeScroll" style="height:90%"></div>';			
				htm+='		</div>';
				htm+='		<div id="rf_pstabs3_'+pack_id+'">';		
				htm+='		    <div id="rf_pstabs3_sl_'+pack_id+'" class="sourceloader ace_editor"></div>';
		 		htm+='		</div>'; 
				htm+='</div>';		
				currentTabCotent=htm;				
				rf_editorTab.tabs("add", "#rf_ptabs-" + pack_id, pinfo);
				$j("#rf_pstabs_" + pack_id).tabs({
					selected: 0,
					select: function(event, ui){
						if (typeof ui.panel.isLoaded == 'undefined' && ui.index == 1) {
							rf_packageMembInfo(ui);
							ui.panel.isLoaded = true;
						}
					}
				});				
			}else{
				var index=$j('#rf_tabs a[href="#rf_ptabs-'+  pack_id+'"]').parent().index();
				rf_editorTab.tabs('select', index);
				return ;
			}
		 	
			var buildPtable=function(d,ttl){
				var htm="<table width='45%' cellpadding='5' cellspacing='2' border='1' style='margin-right:20px;float:left;border-collapse:collapse;'><tr><td style='background-color:#efefef;text-align:center;' colspan='2'>"+ttl+"</td></tr>";
				for(dd in d){
					if(dd=="Version" || dd=="Packaged" || dd=="Depends" ){
						var value=d[dd];
						value=(dd=="Packaged")?moment(value,"YYYY-MM-DD HH:mm:ss").fromNow():value;
						value=(dd=="Depends")?"<ul class='depedends'>"+(value+",").replace(/(.*?),/g,'<li>$1 </li>')+"</ul>":value;
						htm+="<tr><td>"+dd+"</td><td>"+value+"</td></tr>";
					}					 
				}
				htm+="</table>";
				$j("div#rf_ptabs-"+pack_id+" .pack_repo").append(htm);
			}
			$j("div#rf_ptabs-"+pack_id+" .pack_repo").html("");
			if(rdata.unix) buildPtable(rdata.unix,"Unix");
			if(rdata.win) buildPtable(rdata.win,"Windows");

			$j("div#rf_ptabs-"+pack_id+" .pack_repo .depedends").expander({
				  slicePoint: 100,
				  widow: 2,
				  expandText: '<img src="images/icon_expand.gif"  border="0">',
				  expandPrefix:"",
				  expandEffect: 'fadeIn',
				  expandSpeed: 1000,
				  collapseEffect: 'fadeOut',				  
				  collapseSpeed: 2000,
				  userCollapseText: '<img src="images/icon_collapse.gif" border="0">'
			});
			
			var htm="<table width='100%' border='1' cellspacing='2' cellpadding='5' style='border-collapse:collapse;border-color:#c0c0c0;'><tr><td style='background-color:#efefef;' width='90'>Version</td><td style='background-color:#efefef;' width='*'>Peers</td></tr>";
			for(ver in rdata.pinfo) {
				var p1=rdata.pinfo[ver]+",";
				htm+="<tr><td>"+ver+"</td><td><ul class='peers'>"+p1.replace(/(.*?),/g,'<li>$1 </li>')+"</ul></td></tr>";
			}
			$j("div#rf_ptabs-"+pack_id+" .peers_packtable").html(htm);			
			var removeOpt="";
			var resetOpt="";
			if(rdata.access!=null && rdata.access=='RWX') {
                 removeOpt="<img onclick='rf_removeDraggedItem(this)' class='removeBtn' src='images/remove.png' border='0'>";
                 resetOpt="<a style='float:right;' href='#' onclick='rf_resetRequiredPack(this)' packageid='"+pack_id+"' packagename='"+pinfo+"' title='Reset to all function in the group and folders above in current order'><img src='images/refresh.png'></a>";
            }
                    	 
			var htm="<div style='display:inline-block;height:360px;margin-bottom:20px;padding:10px;'><div class='tag_box div_available'><ul class='task_tag_dialog_ul task_tag_available chromeScroll'>";
		    var owner="<div class='tag_box'><div class='tag_title'>Required Packages "+resetOpt+" </div><ul class='task_tag_dialog_ul task_tag_owner chromeScroll'>";		    
		    for(ic=0;ic<rdata.folders.length;ic++){					
		    	  if(rdata.folders[ic].folder_name!='Trash' && rdata.folders[ic].id!=pack_id){	    	    
		    	       	       
		    	    var sel="<li item_id='"+pack_id+"' tag_id='"+rdata.folders[ic].id+"' class='task_tag_dnd task_tag_dialog'>"+rdata.folders[ic].folder_name+removeOpt+"</li>";
					if($j.inArray(rdata.folders[ic].id,rdata.required_packages)>=0){			
						owner+=sel;				 
					}else{
						htm+=sel;						
					}
		    	  }
			}
		    htm+="</ul></div>";
		    owner+="</ul></div></div>";
		    var tbdiv="div#rf_ptabs-"+pack_id;
		    $j(tbdiv+" .required_packages").html(htm+owner);		
		    if(rdata.access!=null && rdata.access=='RWX') {
                $j(tbdiv+" .tags_panel .task_tag_available, "+tbdiv+" .tags_panel .task_tag_owner").sortable({              
                       connectWith: ".task_tag_dialog_ul",
                       placeholder: "task_tag_placeholder",              
                       receive: function(event, ui) {
                           rf_packageSelectedSync(ui.item.attr("item_id"));                    
                       }        
                });		        
		    }else{
		        $j(tbdiv+" .required_packages .div_available").hide();
		    }  	
		    $j(tbdiv+" .required_packages .tag_title [title]").qtip();
						
			$j(tbdiv+" .task_tag_available,"+tbdiv+" .task_tag_owner").disableSelection();
			if(rdata.sourceloader!=null) {
				  $j(tbdiv+" .sourceloader").html(rdata.sourceloader);
			}
			
			var ea_id="rf_pstabs3_sl_"+pack_id;
			if(ACE_EDITORS[ea_id]!=null){
				ACE_EDITORS[ea_id].destroy();
				$j("#"+ea_id).children().remove();
			}	
			var tm = function(ea_id,fieldval1){
				$j("#"+ea_id).show();						 
				ACE_EDITORS[ea_id]= ace.edit(ea_id);
				ACE_EDITORS[ea_id].getSession().setValue(fieldval1);
				var is_readonly=true;
				setACE_Default(ACE_EDITORS[ea_id],is_readonly);						
			}
			setTimeout(tm,500,ea_id,(rdata.sourceloader!=null?rdata.sourceloader:""));
	}
	progress_message('Please wait...');
	RFunctionMgmt.getPackageInfo(pinfo,respBack);
}

function rf_packageMembInfo(ui){
	var pid=ui.panel.id.replace("rf_pstabs2_","");
	
	var respBack=function(data){
		if(data!=null){
			var htm="";
			htm+="<div class='rf_tagstable'><div class='rf_tagstable-row'>"; 
    		htm+="<div class='rf_tagstable-cell'><div class='tag_box div_available'><ul class='task_tag_dialog_ul task_tag_available chromeScroll'></ul></div></div>"; 
    		htm+="<div class='rf_tagstable-cell'>";
			htm+="<div class='rf_owntagspane'>";
            htm+=" <h3 class='rf_subheader'>Package Themes & Notification</h3>";
            htm+=" <div class='rf_membtab'>";            
            htm+="   <div class='rf_membaction'>"
            htm+="       <div class='tag_box'><div class='tag_title'>Themes</div><ul package_id='"+pid+"' class='task_tag_dialog_ul package_tag_theme '></ul></div>";             
            htm+="       <div class='tag_box'><div class='tag_title'>Notification</div><ul package_id='"+pid+"' class='task_tag_dialog_ul package_tag_notification '></ul></div>";
            htm+="   </div>";
            htm+=" </div>";       
            htm+="</div>";            
			htm+="<div class='rf_memberspane'>";
			htm+=" <h3 class='rf_subheader'>Function Tags (Batch Update)</h3>";
			htm+=" <div class='rf_membtab'>";
			htm+="   <div class='rf_membaction'>"
			htm+="       <div class='tag_box'><div class='tag_title'>Over-write Owner</div><ul class='task_tag_dialog_ul task_tag_owner '></ul></div>";				
			htm+="       <div class='tag_box'><div class='tag_title'>Add Tag</div><ul class='task_tag_dialog_ul task_tag_add '></ul></div>";
			htm+="       <div class='tag_box'><div class='tag_title'>Remove Tag</div><ul class='task_tag_dialog_ul task_tag_remove '></ul></div>";
			htm+="   </div>";
			htm+="   <div class='rf_notiaction'>"							
			htm+="       <div class='tag_box'><div class='tag_title'>Add Notification Tag</div><ul class='task_tag_dialog_ul task_noti_add '></ul></div>";
			htm+="       <div class='tag_box'><div class='tag_title'>Remove Notification Tag</div><ul class='task_tag_dialog_ul task_noti_remove '></ul></div>";
			htm+="   </div>";
			htm+=" </div>";			
			htm+="</div>";
			htm+="</div></div></div>"; //table & row & cell
			
			$j("div#rf_ptabs-"+pid+" .rf_tagspane").html(htm);
			for(ic=0;ic<data.tags.length;ic++){
				if(data.tags[ic]!=null && data.tags[ic].tagname!=null && data.tags[ic].tagname.indexOf("thm-")>=0){				
					var tag=data.tags[ic].tagname.replace(/^thm-(.*)$/g,"$1");
					var sel="<li item_id='"+pid+"' tag_id='"+data.tags[ic].id+"' class='task_tag_dnd task_tag_dialog'>"+tag+"</li>";
					$j("div#rf_ptabs-"+pid+" .rf_tagstable .task_tag_available").append(sel);
					
                   if(data.notification_tags.indexOf(data.tags[ic].id)>=0 || data.theme_tags.indexOf(data.tags[ic].id)>=0){
                       var ulid=null;
                       if(data.theme_tags.indexOf(data.tags[ic].id)>=0) ulid=".package_tag_theme";
                       if(data.notification_tags.indexOf(data.tags[ic].id)>=0) ulid=".package_tag_notification";
                       var removebtn="";
                       if(data.access!=null && data.access=='RWX') {                       
                         removebtn='<img onclick="rf_removeDraggedTheme(this)" class="removeBtn" src="images/remove.png" border="0">';
                       }
                       var sel="<li item_id='"+pid+"' tag_id='"+data.tags[ic].id+"' class='task_tag_dnd task_tag_dialog'>"+tag+removebtn+"</li>";                       
                       $j("div#rf_ptabs-"+pid+" .rf_owntagspane "+ulid).append(sel);
                    }
				}
			}
			if(data.access!=null && data.access=='RWX') {      
    			$j("div#rf_ptabs-"+pid+" .rf_tagstable .task_tag_available, div#rf_ptabs-"+pid+" .rf_owntagspane .task_tag_dialog_ul").sortable({                
                       connectWith: ".task_tag_dialog_ul",
                       placeholder: "task_owerwrite_placeholder",      
                       out:function(event,ui){ if(!$j(event.target).hasClass("task_tag_available"))  $j(event.target).removeClass("focussed"); },
                       over:function(event,ui){ if(!$j(event.target).hasClass("task_tag_available")) $j(event.target).addClass("focussed");} ,
                       update:function(event,ui){
                         if($j(event.target).hasClass("task_tag_available")) {  
                             $j(this).sortable('cancel');
                         } else{
                             var tag_id=$(ui.item).attr("tag_id");
                             if($j(event.target).find("li[tag_id='"+tag_id+"']").length==0){
                                $(ui.item).clone().append('<img onclick="rf_removeDraggedTheme(this)" class="removeBtn" src="images/remove.png" border="0">').appendTo($j(event.target));   
                                rf_syncPackageThemes(event.target);
                             }
                         }
                       }
                });                
    			//sorting for memeber tag assingment 
    			$j("div#rf_ptabs-"+pid+" .rf_memberspane .task_tag_dialog_ul").sortable({				
    				   connectWith: ".task_tag_dialog_ul",
    				   placeholder: "task_owerwrite_placeholder",
    				   receive: function(event, ui) {
    					   var tag_id=$j(ui.item).attr("tag_id");
    					   var pid=$j(ui.item).attr("item_id");
    					   var tag=$j(ui.item).text();
    					   var act=""; 
    					   if($j(event.target).hasClass("task_tag_owner")) act="overwrite_owner";
    					   if($j(event.target).hasClass("task_tag_add")) act="add_tag";		   
    					   if($j(event.target).hasClass("task_tag_remove"))  act="remove_tag";
    					   if($j(event.target).hasClass("task_noti_add"))  act="add_noti";
    					   if($j(event.target).hasClass("task_noti_remove"))  act="remove_noti";    					   
    					   if(act!=''){
    						   rf_memAction(pid,tag_id,act,tag);
    					   }
    			       },
    			  	   update:function(event,ui){
    			  		 if($j(event.target).hasClass("task_tag_available"))   $j(this).sortable('cancel');
    			       }
    			});
			} 
			else{
			   $j("div#rf_ptabs-"+pid+" .rf_tagstable .rf_tagstable-row .rf_tagstable-cell:first-child").hide();
			   $j("div#rf_ptabs-"+pid+" .rf_tagstable .rf_tagstable-row .rf_tagstable-cell:last-child").css("width","99%").css("padding-top","30px");
			   $j("div#rf_ptabs-"+pid+" .rf_tagstable .rf_tagstable-row .rf_tagstable-cell:first-child").hide();
			   $j("div#rf_ptabs-"+pid+" .rf_tagstable .rf_memberspane").hide();
			   
			}
		}
	}
	RFunctionMgmt.getPackageMembersInfo(+pid,respBack);
}

function rf_syncPackageThemes(tobj){
    var cl="";
    if($j(tobj).hasClass("package_tag_theme")) cl="folder_tags";
    if($j(tobj).hasClass("package_tag_notification")) cl="folder_followtags";
    
    if(cl!=''){        
        var tids=[];
        $j(tobj).find("li[tag_id]").each(function(idx,el){
            tids.push(+$j(this).attr("tag_id"));
        });
        var p_id=$j(tobj).attr("package_id");
        var respBack=function(data){
            progress_message();
            if(data!=null && data){
                message_status("Package info update");
            }
        }
        progress_message("Please wait while updating...");
        RFunctionMgmt.updatePackageThemes(+p_id,tids,cl,respBack);    
    }
}

function rf_removeDraggedTheme(tobj){
    var pid=$j(tobj).parent().attr("tag_id");
    var parent0=$j(tobj).parents(".task_tag_dialog_ul")[0];
    $j(tobj).parent().fadeOut(600, function(){ 
        $j(this).remove();
        rf_syncPackageThemes(parent0);
    });
}

function rf_memAction(pid,tag_id,act,tag){
	 $j( "#dialog_packageAction").dialog({
			resizable: false,			 
			width:700,
			modal: true,		
			dialogClass: 'comment_dialog',		
			buttons: {
				"Cancel": function() {
					$j( this ).dialog( "close" );
				},	 				
				"Continue": function() {
					var function_ids=[];
					$j("#dialog_packageAction .ul_list ul li[function_id]").each(function(idx,el){
						function_ids.push(+$j(el).attr("function_id"));
					});
					
					var respBack=function(data){
						progress_message();
						if(data!=null && data)message_status("Member functions updated successfully");						
					}
					progress_message('Please wait...');
					if(function_ids.length>0){
						RFunctionMgmt.packageMemberAction(+pid,+tag_id,function_ids,act,respBack);				
					}else{
						message_status("Failed, Required minimun 1 function to complete this action!")
					}
					$j( this ).dialog( "close" );
				}
			}
	});
	var msg="";
	if(act=="overwrite_owner") msg="Dragged tag <span class='tag'>"+tag+"</span> will be over-written as owner for the following functions";
	if(act=="add_tag") msg="Dragged tag <span class='tag'>"+tag+"</span> will be added the following functions ";
	if(act=="remove_tag") msg="Dragged tag <span class='tag'>"+tag+"</span> will be removed from the following functions ";
	if(act=="add_noti") msg="Dragged tag <span class='tag'>"+tag+"</span> will be notified on changes of the following functions";
	if(act=="remove_noti") msg="Dragged tag <span class='tag'>"+tag+"</span> won't be notified on changes of the following functions";
	
	$j("#dialog_packageAction .label").html(msg); 
	$j("#dialog_packageAction .ul_list ul").children().remove();	
	$j("#rf_treeMenu ul[foldername][folderid='"+pid+"'] li").clone().each(function(idx,el){
		$j(el).find(".treeFunctionItem").append('<a  class="removeBtn" href="#" onclick="rf_removeTagSelected4Package(this);return false;"><img border="0" src="images/remove.png" border="0"></a>');
	}).appendTo("#dialog_packageAction .ul_list ul");
} 

function rf_removeTagSelected4Package(thisobj) {
	$j(thisobj).parents("li[function_id]").animate({width:0}, 300,"linear",function(){ $j(this).remove();  });
}

function rf_removeDraggedItem(tobj) {
	var pid=$j(tobj).parent().attr("item_id");
	var tbdiv="div#rf_ptabs-"+pid;	
	$j($j(tobj).parent()).appendTo(tbdiv+" .task_tag_available");
	rf_packageSelectedSync(pid);
}

function rf_packageSelectedSync(pid){
	var selected=[];
	$j("div#rf_ptabs-"+pid+" .task_tag_owner li[tag_id]").each(function(idx,elm){
		selected.push(+$j(elm).attr("tag_id"));
	});
	var respBack=function(data){
		if(data)  message_status("Package dependencies updated")
	}
	progress_message('Please wait...');
	RFunctionMgmt.syncPackageHirDep((+pid),selected,respBack);
}

function rf_resetRequiredPack(tobj){
	if(!confirm("Are you sure you wish to reset?")) return;
	var pname=$j(tobj).attr("packagename");
	var pid=$j(tobj).attr("packageid");
	var respBack=function(data){		
		progress_message();
		if(data!=null){
			var tbdiv="div#rf_ptabs-"+pid;			
			$j(tbdiv+" .task_tag_owner li").each(function(idx,el){
				$j(el).appendTo(tbdiv+" .task_tag_available");				
			});
			for(iac=0;iac<data.length;iac++){
				$j(tbdiv+" .task_tag_available li[tag_id='"+data[iac]+"']").appendTo(tbdiv+" .task_tag_owner");
			}
		}
	}
	progress_message('Please wait...');
	RFunctionMgmt.resetPackageHirDep(pname,respBack);
}

function rf_flagEdited(fn_id) {
	$j("div#rf_tabs > ul a[href='#rf_tabs-"+fn_id+"']").parent().addClass("ace_edited");	
}

function setACE_Default(editor,ro_flag) { // Drive/Admin/qlib.properties
	
	editor.on('change',function(obj){
		
		var fn_id=rf_getActivePanelID();
		rf_flagEdited(fn_id);
	})
	
	var respback = function(data) {
		
		for(d=0;d<data.length;d++){
			
			var res = data[d].split("=");
			switch (res[0]) {
				case "theme" :
					editor.setTheme("ace/theme/"+res[1].trim());
					break;
				case "mode" :
					editor.getSession().setMode("ace/mode/"+res[1].trim());
					break;
				case "font_size" :
					editor.setFontSize(res[1].trim());
					break;
				case "wrap_mode" :
					editor.getSession().setUseWrapMode((res[1].trim()=="1"? true : false));
					break;
				case "highlight_active_line" :
					editor.setHighlightActiveLine((res[1].trim()=="1"? true : false));
					break;
				case "highlight_selected_word" :
					editor.setHighlightSelectedWord((res[1].trim()=="1"? true : false));
					break;
				case "highlight_gutter_line" :
					editor.setHighlightGutterLine((res[1].trim()=="1"? true : false));
					break;
				case "show_print_margin" :
					editor.setShowPrintMargin((res[1].trim()=="1"? true : false));
					break;
			}
		}
	}
	
	RFunctionMgmt.getACESetting(respback);
    
	if(ro_flag!=null){
		editor.setReadOnly(ro_flag);
	}
	editor.session.setFoldStyle("markbegin");
    editor.setShowFoldWidgets(true);
    
	editor.commands.addCommand({
		name: 'save',
		bindKey: {win: 'Ctrl-S',  mac: 'Command-S'},
		exec: function(editor) {
			saveRFunction();
		},
		readOnly: false // false if this command should not apply in readOnly mode
	});
 
	editor.commands.addCommand({
		name: 'ctrlclick',
		bindKey: {win: 'Ctrl-DOWN',  mac: 'Command-DOWN'},
		exec: function(editor) {
			 alert("clicked");
		},
		readOnly: true // false if this command should not apply in readOnly mode
	});
	
	editor.commands.addCommand({
		name: 'fullscreen',
		bindKey: {win: 'Esc',  mac: 'Esc'},
		exec: function(editor) {
			//alert('escape')
			if($j(editor.container).hasClass('fullScreen-editor')){
				var anc="<a fid='"+$j(editor.container).attr("id")+"' screentitle=''></a>";
				rf_acefull($j(anc));
			}
		},
		readOnly: true // false if this command should not apply in readOnly mode
	});
	
	editor.on("click",function(ev){
		//gamaclick
		//if(ev.domEvent!=null && ev.domEvent.ctrlKey ){
			//console.log('clicked');
			
			dClick = dClick + 1;
			setTimeout(function(){
				dClick = 0;
			},200);
			
			if (dClick==2) {
				var token=ev.editor.session.getTokenAt(ev.$pos.row,ev.$pos.column);
				if(token.type=='userfunction' && token.value!=null && token.value!=''){
					if(typeof rf_open=='function'){
						rf_open(token.value);
					}else{
						//window.open('./qlib.jsp?open_functions='+token.value);
						window.open('./RFunctionEditor?open_functions='+token.value);
					}
				}
			}
		//}
	});
}
 
function listener(event){
   if(typeof event.data =='string' && event.data.indexOf("open_function:")>=0){
	   rf_open(event.data.split(":")[1]);
   }
   if(typeof event.data=='object' &&  event.data.answer!=null &&  event.data.version!=null) {
	   //console.log(event.data);
	   $j("body").attr("ext_ver",event.data.version);
   }
}
addEventListener("message", listener, false)

</script>
<!-- Finish r.js -->

<script language="JavaScript" type="text/javascript" src="js/teamorg.js"></script>
<script language="JavaScript" type="text/javascript" src="js/team.js"></script>
<script language="JavaScript" type="text/javascript" src="js/private.js"></script>

<script type='text/javascript' src='dwr/interface/MenuMgmt.js'></script>
<script language="JavaScript" type="text/javascript" src="js/menu.js"></script>

<script>
function getVersion(file)
{
        var vFile = new XMLHttpRequest();
    vFile.open("GET", file, false);


    vFile.onreadystatechange = function ()
    {
        if(vFile.readyState === 4)
        {
            if(vFile.status === 200 || vFile.status == 0)
            {
                var allText = vFile.responseText;
                var lineone = allText.split(":");

                var f1 = lineone[0].split(".");

                var front = f1[0].substring(f1[0].length-2);
                var version = front+"."+f1[1]+"."+f1[2];

                var test = document.getElementById('change-version');

                test.innerHTML = "SinglePackageAl_"+version;
            }
        }
    }
    vFile.send(null);
}
</script>
<!--Intan start -->
<script> // Get the modal 
    function packageModal(){ var packagemodal = document.getElementById("packageModal"); 
    // Get the button that opens the modal 
    var packagebtn = document.getElementById("change-version"); 
    // Get the <span> element that closes the modal 
    var packagespan = document.getElementsByClassName("close-package")[0]; 
    var vFile = new XMLHttpRequest(); 
    vFile.open("GET", "NEWS", false); 
    vFile.onreadystatechange = function () { 
        if(vFile.readyState === 4) { 
            if(vFile.status === 200 || vFile.status == 0) { 
                var allText = vFile.responseText; 
                var customTextElement = document.getElementById('modalContent'); 
                customTextElement.innerHTML = "<pre>"+allText+"</pre>";
        }
    }
}

vFile.send(null);
packagemodal.style.display = "block";

// When the user clicks on <span> (x), close the modal
packagespan.onclick = function() {
packagemodal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
if (event.target == packagemodal) {
packagemodal.style.display = "none";
}
}
}
</script>

<!--Intan finish -->

	<script language="JavaScript">
    var getUseAce = PARM_USE_ACE ;
    //if( getUseAce != "") {
      CODE_EDITOR=CODE_ACE_EDITOR;     
    //}
	</script>



<style>
	
#rf_tabs.ui-widget-content {
	border:0px;
}
#rf_tabs.ui-widget {
   font-family:Arial, Verdana, Geneva, Helvetica, sans-serif;
   font-size:.7em;
   height:100%;		
}

#rf_tabs.ui-tabs{
	padding:0px;
}
#rf_tabs li  .ui-icon-close { float: left; margin: 0.4em 0.2em 0 0; cursor: pointer; }
#rf_tabs > .ui-widget-header {
    background: none;
    border: 0px solid #AED0EA;    
    font-weight: bold;
    
}
#rf_tabs > .ui-tabs-panel{
	border:4px solid #7ABDFF;	 
	marging:0px 0px 0px 3px;
	padding:2px;
	-moz-border-radius: 0px 10px 10px 0px;
	border-radius: 0px 10px 10px 0px;	
	-moz-box-shadow: 5px 5px 5px #888;
	-webkit-box-shadow: 5px 5px 5px #888;
	box-shadow: 5px 5px 5px #888;
	position:relative;

} 
#rf_tabs.ui-tabs .ui-tabs-nav {
	padding:0px;
}


.rf_subtab.ui-tabs{
	padding:0px;
}
.rf_subtab.ui-widget{
   font-family:Arial, Verdana, Geneva, Helvetica, sans-serif;
   
}
.rf_subtab.ui-widget-content{
	border:0px;
}

.rf_subtab > .ui-tabs-panel{		 
	marging:0px 0px 0px 0px;
	padding:0px 0px 0px 0px;
}


.rf_subtab > .ui-corner-all {
	-moz-border-radius: 6px 6px 0px 0px;
	border-radius: 6px 6px 0px 0px;
	border:0px solid white; 
}

.ace_editor { 
    height: 90%;
}

.ace_toolbar {
	display:inline-block;
	width:95%;		
	
}
.ace_toolbar .savebtn{
	display:inline;
	float:left;
	margin-top:3px;
	margin-left:10px;
	
}
.ace_toolbar .deletebtn{
	display:inline;	
	float:left;	
	margin-top:1px;
	margin-left:50%;
}
.ace_toolbar .deletebtn img{
	height:26px;	
}

.icon_fullscreen.adjust_max {
	margin-top:1px;
	margin-right:1px; 
}
.icon_fullscreen.adjust_max a {
	padding-top:10px;
}
.fullScreen .comment_dialog,
.fullScreen .status-top,
.fullScreen .ui-widget-overlay
 {
	z-index:10003 !important;	
}
.fullScreen .status-top {
	right:50% !important;
}

/*private function start*/

.directory {
  position: relative;
  height: 30px;
  width: 170px;
  margin-top: 2px;
  margin-bottom: 5px;
  margin-right: -3.5em;
}

.directory > input[type="file"] {
  position: absolute;
  opacity: 0;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0
}

.directory > label {
  margin-left:2px;
	font-size:.7em;
	background-color: #dcdcdc;
	-moz-border-radius: 3px;
	border-radius: 3px;	
	padding:1px;
	border:1px solid #243356;
}

* {
    box-sizing: border-box;
}

/* Create two equal columns that floats next to each other */
.column {
    float: left;
    width: 50%;
}

/* Clear floats after the columns */
.row:after {
    content: "";
    display: table;
    clear: both;
}
</style>

<script>
    var getLoggedUser = PARM_LOGGED_USER;
    if(getLoggedUser == "") {
      window.location.replace("/login.jsp");
    }
</script>

</head>
<body onload="getVersion('NEWS')">

<!-- Include user_menu start -->



<!--Intan start-->
<!-- The Modal -->

<div id="packageModal" class="modal-package">

  <!-- Modal content -->

  <div class="modal-content-package">
    <span class="close-package">&times;</span>
    <p id="modalContent"></p>
  </div>

</div>
<!--Intan finish-->

<script>
  
  var getAce = PARM_ACE_CHECKED ; 
  var getReditor = PARM_REDITOR_CHECKED ;

  //if(getAce != "" ) {
      CODE_EDITOR=CODE_ACE_EDITOR;
  //}
  //if(getReditor != "" ) {
      REDITOR_ADMIN=true;
  //}

</script>

<div class="fe-mainMenu">
	<ul>
	   <li><a href="login.jsp?action=logout">Logout</a>  [ <!--<a href='#' id='user_profile_a' onclick='menu_profiletoggle(this);return false;'>--> 
	   
	   <script>
	   		var upperName = getLoggedUser.replace('"','');
	   		document.write(upperName);
	   </script>
	   
	   	<!--<img src='images/button_plus.gif' border='0' height='14px' style='margin-left:2px' class='btn'><img class='btn' src='images/button_minus.gif' style='display:none;margin-left:2px' border='0' height='14px'></a>--> ]</li>
	   
	   <li><a href="https://wiki.alphien.com/ALwiki/Qlib_Introduction" target="_blank">help</a></li>
   <!-- The Modal -->
	<div id="helpModal" class="modal">

   <!-- Modal content -->
	<div class="modal-content">
		<span class="close">&times;</span>
		<iframe width='100%' height='80%' src="https://wiki.alphien.com/ALwiki/Qlib\_Introduction"></iframe>
	</div>
	</div>
	
	<script>
// Get the modal
var modal = document.getElementById('helpModal');

// Get the button that opens the modal
var btn = document.getElementById("help");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
if (event.target == modal) {
modal.style.display = "none";
}
}
</script>

<li id="superuser_status">
<script>
  var mLink = document.createElement('a');
  
  if (PARM_SENABLED == true) {
  
  	var getLoggedSuperUser = PARM_LOGGED_SUPER;

    if (getLoggedSuperUser!="") {
      var mText = document.createTextNode('Exit Superuser');
      mLink.appendChild(mText);
      mLink.title = "Exit Superuser";
      mLink.href = "superuser.jsp?action=logout&referer=PARM_REQUEST_URI";  
    } else {
      var mText = document.createTextNode('Login Superuser');
      mLink.appendChild(mText);
      mLink.title = "Login Superuser";
      mLink.href = "superuser.jsp?referer=PARM_REQUEST_URI";  
    }
  }
	var elementSuper = document.getElementById("superuser_status");
  	elementSuper.appendChild(mLink);

</script>
</li>	   
		<li><span style="font-size:12px"><a href="#" onclick="packageModal()" id="change-version" data-toggle="modal" data-target="#myModal">V.3.0.1</a></span></li>
	</ul>
    <div id='user_profile' class='user_profile' style='display:none;'>
    	<div style='padding:20px;display:block;'>
    		<div style='background-color:#D9ECFF;padding:3px;font-weight:bold;padding-left:10px;'>Beta Features</div>
    		<div style='border:1px solid #D9ECFF;padding:10px;border-radius: 0px 0px 15px 15px;'>       
    		        <div><input type='checkbox' pref_item='beta_ace_editor' value='' PARM_ACE_CHECKED id='ace_editor_ckbox' onclick='menu_preference(this);'><label for='ace_editor_ckbox'>Use ACE Editor</label></div>    		        
    		</div>
    	
    	<div style='background-color:#D9ECFF;padding:3px;font-weight:bold;padding-left:10px;margin-top:20px'>User Preference</div>
    		<div style='border:1px solid #D9ECFF;padding:10px;border-radius: 0px 0px 15px 15px;'>     
    		        <div><input type='checkbox' pref_item='beta_reditor_admin' value='' PARM_REDITOR_CHECKED id='beta_reditor_ckbox' onclick='menu_preference(this);'><label for='beta_reditor_ckbox'>Enable Drag to Move RFunctions <small>(RFunction will load very slow)</small></label></div>
    		</div>
    		
    	</div>
    </div>

</div>
<script type="text/javascript">

$j(function(){

    var path = "";

    var getServletPath = PARM_SERVLET_PATH;

    if ( getServletPath != "") {
      path = getServletPath;
    }

    var name = ".fe-mainMenu";  
    var menuYloc = null; 
      
    $j(document).ready(function(){  
        menuYloc = parseInt($j(name).css("top").substring(0,$j(name).css("top").indexOf("px")))  
        $j(window).scroll(function () {  
            var offset = menuYloc+$j(document).scrollTop()+"px";  
            $j(name).css("top",offset);
        });  
    });
    
    $j(name+" ul li a").each(function(idx,el){
    	var d=$j(el).attr("href");     
    	if(path!="" && path.split("/")[path.split("/").length-1]==d){
    		$j(el).addClass("fe-current");
    		//$j(el).attr("#");
    		$j(el).attr("href","#");
    		$j(el).click(function(){return false;})

    	}
    });
      
});
    
</script>

<!-- Include user_menu finish -->

<table height="40px" style="position:absolute;z-index:100;top:0px;right:10px" class='status-top'>
	<tr>
	<td>	
	<div id="statusMessage" align="left" style="display:none"></div>
	</td>
	<td>
	<div id="progressMessage" align="left" style="display:none"></div>
	</td>
</tr>
</table>

 <ul class="rf_toolBar">
 
 				<script>
 					/*document.write('<li><img src="');
 					
 					document.write((getCookie('personalSort')=='1' ? "images/descending.png" : getCookie('personalSort') == '0' ? "images/ascending.png" : "images/shuffle.png"));
 					document.write('" ');
 					
 					document.write('title="');
 					document.write((getCookie('personalSort')=='1' ? "descending sort" : getCookie('personalSort') == '0' ? "ascending sort" : "no sort"));
 					document.write('" ');
 					
 					document.write('onclick="personalSort()" height="18" width="18"></li>');*/
 				
 				</script>
 				
			   	<li><a href="#" onclick="rf_toggleTree(this)"><img src="images/tree_toggle.png" ></a></li>
			   	<li>
					     <table border="0" cellpadding="0" width="500px" cellspacing="0">
					     	<tr>
					     		<td width="*"><span id="rf_searchFunction"><input id="rf_searchFunctionInp" title="Type Function Name &#x21B5;" type="text"  value=""></span> </td>
								<td width="90" align="center" valign="top"><input style="margin-top:1px;width:70px;border-radius:7px;height:28px;"  id="rf_searchBtn" type="button" onclick="rf_search()" value="View"> </td>
							</tr>
						 </table>	
				</li>					
				<li>
					<a href="https://wiki.alphien.com/ALwiki/Qlib_Introduction" target="_blank">
						<img src="images/help.png">
					</a>
				</li>
</ul>

<!-- The Modal -->
	<div id="helpModalPng" class="modal-png">

   <!-- Modal content -->
	<div class="modal-content-png">
		<span class="closePng">&times;</span>
		<iframe width='100%' height='80%' src="https://wiki.alphien.com/ALwiki/Qlib_Introduction"></iframe>
	</div>
	</div>
	
	<script>
	
// Get the modal

var modal = document.getElementById('helpModalPng');
// Get the button that opens the modal
var btn = document.getElementById("helpPng");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("closePng")[0];

// When the user clicks the button, open the modal
btn.onclick = function() {
//alert("lala");
modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
if (event.target == modal) {
modal.style.display = "none";
}
}

</script>

<table class="main_wrapper" width="99%" height="95%" cellpadding="0" cellspacing="0">
	<tr>
		

		<td class="folder_view" width="600px"  valign="top">
			   
				<div id="rf_treeMenu" class="chromeScroll"></div>
			   
		</td>		
		
		<td class="editor_view" width="*" valign="top">
				<div id="rf_tabs">
					<ul>
					</ul>
				</div>
			
		</td>
	</tr>
</table>

<span id="file-uploader">       
        
</span>

 
<script language="JavaScript">
  
  var readonly = true;
  var lite = false;


  var getLite = PARM_LITE ;
  if ((getLite != "") && (getLite == "true")) {
    lite = true;
  }

  var getEdit = PARM_EDIT;
  if ((getEdit != "") && (getEdit == "true")) {
    readonly = false;
  }

  var getOpenFunctions = PARM_OPEN_FUNCTIONS;
  var getSearchR = PARM_SEARCH_R;

  if (getOpenFunctions != "") {
    fr_pageinit(getOpenFunctions,readonly,lite);
  } else if (getSearchR != "") {
    rf_searchFrURL(getSearchR);
  } else {
    fr_pageinit();
  }
	
</script>
 
<div id="dialog_commit" title="Comments" style="display:none">
   <div class="label">   	
	Comments:	
   </div>	
	<div>   	
	  <textarea id="dialog_commit_msg" style="width:100%;height:250px"></textarea>
   </div>
</div>
 
<div id="dialog_lockFunc" title="" style="display:none;min-height:50px">
	<div class="label">  
	 Lock Release options:
	</div>
	<div>    	
	    <select id="dialog_lockFunc_opt">
	    	<option value="0">Manual</option>		 
			<option value="300">Manual or release after 5 minutes from closed of this page</option>
	    </select>
   </div>
</div>

<div id="dialog_packageAction" title="Confirm" style="display:none">
   <div class="label">   	
	 	
   </div>	
	<div class="ul_list chromeScroll">   	
	 	<ul></ul>
   </div>
</div>

 <div id="rf_search_dialog" title="Search Result" style="display:none"> 
    	 <div id="rf_search_dialogBdy"></div>
 </div>

<div id="wikiDialog" title="" style="display:none;min-height:50px">
	<div id="wikiDialogBdy"></div>
</div>
<div id="dialog_folders" title="" style="display:none;min-height:50px">
	<div class="label">  
	 Choose Folder to put back
	</div>
	<div id="dialog_foldersBdy"></div>
</div>

</body>
</html>
